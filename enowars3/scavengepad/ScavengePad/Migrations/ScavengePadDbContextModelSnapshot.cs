// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ScavengePad.Storage;

namespace ScavengePad.Migrations
{
    [DbContext(typeof(ScavengePadDbContext))]
    partial class ScavengePadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ScavengePad.Models.Database.File", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MimeType");

                    b.Property<string>("Name");

                    b.Property<long?>("ObjectiveId");

                    b.Property<long?>("OperationId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<long>("UploaderId");

                    b.HasKey("Id");

                    b.HasIndex("ObjectiveId");

                    b.HasIndex("OperationId");

                    b.HasIndex("UploaderId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("ScavengePad.Models.Database.Objective", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("ObjectivePadSuffix");

                    b.Property<long>("OperationId");

                    b.Property<long>("Points");

                    b.Property<bool>("Solved");

                    b.Property<long>("TeamId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.HasIndex("TeamId");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("ScavengePad.Models.Database.Operation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("OperationPadSuffix");

                    b.Property<long>("TeamId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("ScavengePad.Models.Database.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Authkey");

                    b.Property<string>("Teamname");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ScavengePad.Models.Database.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Password");

                    b.Property<long>("TeamId");

                    b.Property<byte[]>("Username");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ScavengePad.Models.Database.File", b =>
                {
                    b.HasOne("ScavengePad.Models.Database.Objective")
                        .WithMany("Files")
                        .HasForeignKey("ObjectiveId");

                    b.HasOne("ScavengePad.Models.Database.Operation")
                        .WithMany("Files")
                        .HasForeignKey("OperationId");

                    b.HasOne("ScavengePad.Models.Database.User", "Uploader")
                        .WithMany()
                        .HasForeignKey("UploaderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ScavengePad.Models.Database.Objective", b =>
                {
                    b.HasOne("ScavengePad.Models.Database.Operation", "Operation")
                        .WithMany("Objectives")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ScavengePad.Models.Database.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ScavengePad.Models.Database.Operation", b =>
                {
                    b.HasOne("ScavengePad.Models.Database.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ScavengePad.Models.Database.User", b =>
                {
                    b.HasOne("ScavengePad.Models.Database.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
