// third_party/blink/public/mojom/input/synchronous_compositor.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/input/synchronous_compositor.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');
  var shared_memory$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/shared_memory.mojom', '../../../../../mojo/public/mojom/base/shared_memory.mojom.js');
  }
  var time$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/time.mojom', '../../../../../mojo/public/mojom/base/time.mojom.js');
  }
  var begin_frame_args$ =
      mojo.internal.exposeNamespace('viz.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/viz/public/mojom/compositing/begin_frame_args.mojom', '../../../../../services/viz/public/mojom/compositing/begin_frame_args.mojom.js');
  }
  var compositor_frame$ =
      mojo.internal.exposeNamespace('viz.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/viz/public/mojom/compositing/compositor_frame.mojom', '../../../../../services/viz/public/mojom/compositing/compositor_frame.mojom.js');
  }
  var compositor_frame_metadata$ =
      mojo.internal.exposeNamespace('viz.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/viz/public/mojom/compositing/compositor_frame_metadata.mojom', '../../../../../services/viz/public/mojom/compositing/compositor_frame_metadata.mojom.js');
  }
  var frame_timing_details$ =
      mojo.internal.exposeNamespace('viz.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/viz/public/mojom/compositing/frame_timing_details.mojom', '../../../../../services/viz/public/mojom/compositing/frame_timing_details.mojom.js');
  }
  var local_surface_id$ =
      mojo.internal.exposeNamespace('viz.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/viz/public/mojom/compositing/local_surface_id.mojom', '../../../../../services/viz/public/mojom/compositing/local_surface_id.mojom.js');
  }
  var returned_resource$ =
      mojo.internal.exposeNamespace('viz.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/viz/public/mojom/compositing/returned_resource.mojom', '../../../../../services/viz/public/mojom/compositing/returned_resource.mojom.js');
  }
  var hit_test_region_list$ =
      mojo.internal.exposeNamespace('viz.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'services/viz/public/mojom/hit_test/hit_test_region_list.mojom', '../../../../../services/viz/public/mojom/hit_test/hit_test_region_list.mojom.js');
  }
  var geometry$ =
      mojo.internal.exposeNamespace('gfx.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/gfx/geometry/mojom/geometry.mojom', '../../../../../ui/gfx/geometry/mojom/geometry.mojom.js');
  }
  var transform$ =
      mojo.internal.exposeNamespace('gfx.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'ui/gfx/mojom/transform.mojom', '../../../../../ui/gfx/mojom/transform.mojom.js');
  }



  function SyncCompositorDemandDrawHwParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SyncCompositorDemandDrawHwParams.prototype.initDefaults_ = function() {
    this.viewportSize = null;
    this.viewportRectForTilePriority = null;
    this.transformForTilePriority = null;
  };
  SyncCompositorDemandDrawHwParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SyncCompositorDemandDrawHwParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SyncCompositorDemandDrawHwParams.viewportSize
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Size, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SyncCompositorDemandDrawHwParams.viewportRectForTilePriority
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SyncCompositorDemandDrawHwParams.transformForTilePriority
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, transform$.Transform, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SyncCompositorDemandDrawHwParams.encodedSize = codec.kStructHeaderSize + 24;

  SyncCompositorDemandDrawHwParams.decode = function(decoder) {
    var packed;
    var val = new SyncCompositorDemandDrawHwParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.viewportSize =
        decoder.decodeStructPointer(geometry$.Size);
    val.viewportRectForTilePriority =
        decoder.decodeStructPointer(geometry$.Rect);
    val.transformForTilePriority =
        decoder.decodeStructPointer(transform$.Transform);
    return val;
  };

  SyncCompositorDemandDrawHwParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SyncCompositorDemandDrawHwParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Size, val.viewportSize);
    encoder.encodeStructPointer(geometry$.Rect, val.viewportRectForTilePriority);
    encoder.encodeStructPointer(transform$.Transform, val.transformForTilePriority);
  };
  function SyncCompositorDemandDrawSwParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SyncCompositorDemandDrawSwParams.prototype.initDefaults_ = function() {
    this.size = null;
    this.clip = null;
    this.transform = null;
  };
  SyncCompositorDemandDrawSwParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SyncCompositorDemandDrawSwParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SyncCompositorDemandDrawSwParams.size
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.Size, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SyncCompositorDemandDrawSwParams.clip
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, geometry$.Rect, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SyncCompositorDemandDrawSwParams.transform
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, transform$.Transform, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SyncCompositorDemandDrawSwParams.encodedSize = codec.kStructHeaderSize + 24;

  SyncCompositorDemandDrawSwParams.decode = function(decoder) {
    var packed;
    var val = new SyncCompositorDemandDrawSwParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.size =
        decoder.decodeStructPointer(geometry$.Size);
    val.clip =
        decoder.decodeStructPointer(geometry$.Rect);
    val.transform =
        decoder.decodeStructPointer(transform$.Transform);
    return val;
  };

  SyncCompositorDemandDrawSwParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SyncCompositorDemandDrawSwParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.Size, val.size);
    encoder.encodeStructPointer(geometry$.Rect, val.clip);
    encoder.encodeStructPointer(transform$.Transform, val.transform);
  };
  function SyncCompositorCommonRendererParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SyncCompositorCommonRendererParams.prototype.initDefaults_ = function() {
    this.version = 0;
    this.pageScaleFactor = 0;
    this.totalScrollOffset = null;
    this.maxScrollOffset = null;
    this.scrollableSize = null;
    this.minPageScaleFactor = 0;
    this.maxPageScaleFactor = 0;
    this.needInvalidateCount = 0;
    this.invalidateNeedsDraw = true;
    this.didActivatePendingTreeCount = 0;
  };
  SyncCompositorCommonRendererParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SyncCompositorCommonRendererParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 64}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate SyncCompositorCommonRendererParams.totalScrollOffset
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, geometry$.ScrollOffset, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SyncCompositorCommonRendererParams.maxScrollOffset
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, geometry$.ScrollOffset, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SyncCompositorCommonRendererParams.scrollableSize
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, geometry$.SizeF, false);
    if (err !== validator.validationError.NONE)
        return err;







    return validator.validationError.NONE;
  };

  SyncCompositorCommonRendererParams.encodedSize = codec.kStructHeaderSize + 56;

  SyncCompositorCommonRendererParams.decode = function(decoder) {
    var packed;
    var val = new SyncCompositorCommonRendererParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.version =
        decoder.decodeStruct(codec.Uint32);
    val.pageScaleFactor =
        decoder.decodeStruct(codec.Float);
    val.totalScrollOffset =
        decoder.decodeStructPointer(geometry$.ScrollOffset);
    val.maxScrollOffset =
        decoder.decodeStructPointer(geometry$.ScrollOffset);
    val.scrollableSize =
        decoder.decodeStructPointer(geometry$.SizeF);
    val.minPageScaleFactor =
        decoder.decodeStruct(codec.Float);
    val.maxPageScaleFactor =
        decoder.decodeStruct(codec.Float);
    val.needInvalidateCount =
        decoder.decodeStruct(codec.Uint32);
    packed = decoder.readUint8();
    val.invalidateNeedsDraw = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.didActivatePendingTreeCount =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  SyncCompositorCommonRendererParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SyncCompositorCommonRendererParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.version);
    encoder.encodeStruct(codec.Float, val.pageScaleFactor);
    encoder.encodeStructPointer(geometry$.ScrollOffset, val.totalScrollOffset);
    encoder.encodeStructPointer(geometry$.ScrollOffset, val.maxScrollOffset);
    encoder.encodeStructPointer(geometry$.SizeF, val.scrollableSize);
    encoder.encodeStruct(codec.Float, val.minPageScaleFactor);
    encoder.encodeStruct(codec.Float, val.maxPageScaleFactor);
    encoder.encodeStruct(codec.Uint32, val.needInvalidateCount);
    packed = 0;
    packed |= (val.invalidateNeedsDraw & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Uint32, val.didActivatePendingTreeCount);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function SynchronousCompositor_DemandDrawHwAsync_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_DemandDrawHwAsync_Params.prototype.initDefaults_ = function() {
    this.drawParams = null;
  };
  SynchronousCompositor_DemandDrawHwAsync_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_DemandDrawHwAsync_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_DemandDrawHwAsync_Params.drawParams
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, SyncCompositorDemandDrawHwParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_DemandDrawHwAsync_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositor_DemandDrawHwAsync_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_DemandDrawHwAsync_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.drawParams =
        decoder.decodeStructPointer(SyncCompositorDemandDrawHwParams);
    return val;
  };

  SynchronousCompositor_DemandDrawHwAsync_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_DemandDrawHwAsync_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(SyncCompositorDemandDrawHwParams, val.drawParams);
  };
  function SynchronousCompositor_DemandDrawHw_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_DemandDrawHw_Params.prototype.initDefaults_ = function() {
    this.drawParams = null;
  };
  SynchronousCompositor_DemandDrawHw_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_DemandDrawHw_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_DemandDrawHw_Params.drawParams
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, SyncCompositorDemandDrawHwParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_DemandDrawHw_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositor_DemandDrawHw_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_DemandDrawHw_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.drawParams =
        decoder.decodeStructPointer(SyncCompositorDemandDrawHwParams);
    return val;
  };

  SynchronousCompositor_DemandDrawHw_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_DemandDrawHw_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(SyncCompositorDemandDrawHwParams, val.drawParams);
  };
  function SynchronousCompositor_DemandDrawHw_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_DemandDrawHw_ResponseParams.prototype.initDefaults_ = function() {
    this.result = null;
    this.layerTreeFrameSinkId = 0;
    this.metadataVersion = 0;
    this.localSurfaceId = null;
    this.frame = null;
    this.hitTestRegionList = null;
  };
  SynchronousCompositor_DemandDrawHw_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_DemandDrawHw_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 48}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_DemandDrawHw_ResponseParams.result
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, SyncCompositorCommonRendererParams, false);
    if (err !== validator.validationError.NONE)
        return err;




    // validate SynchronousCompositor_DemandDrawHw_ResponseParams.localSurfaceId
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, local_surface_id$.LocalSurfaceId, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_DemandDrawHw_ResponseParams.frame
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, compositor_frame$.CompositorFrame, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_DemandDrawHw_ResponseParams.hitTestRegionList
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 32, hit_test_region_list$.HitTestRegionList, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_DemandDrawHw_ResponseParams.encodedSize = codec.kStructHeaderSize + 40;

  SynchronousCompositor_DemandDrawHw_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_DemandDrawHw_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStructPointer(SyncCompositorCommonRendererParams);
    val.layerTreeFrameSinkId =
        decoder.decodeStruct(codec.Uint32);
    val.metadataVersion =
        decoder.decodeStruct(codec.Uint32);
    val.localSurfaceId =
        decoder.decodeStructPointer(local_surface_id$.LocalSurfaceId);
    val.frame =
        decoder.decodeStructPointer(compositor_frame$.CompositorFrame);
    val.hitTestRegionList =
        decoder.decodeStructPointer(hit_test_region_list$.HitTestRegionList);
    return val;
  };

  SynchronousCompositor_DemandDrawHw_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_DemandDrawHw_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(SyncCompositorCommonRendererParams, val.result);
    encoder.encodeStruct(codec.Uint32, val.layerTreeFrameSinkId);
    encoder.encodeStruct(codec.Uint32, val.metadataVersion);
    encoder.encodeStructPointer(local_surface_id$.LocalSurfaceId, val.localSurfaceId);
    encoder.encodeStructPointer(compositor_frame$.CompositorFrame, val.frame);
    encoder.encodeStructPointer(hit_test_region_list$.HitTestRegionList, val.hitTestRegionList);
  };
  function SynchronousCompositor_SetSharedMemory_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_SetSharedMemory_Params.prototype.initDefaults_ = function() {
    this.shmRegion = null;
  };
  SynchronousCompositor_SetSharedMemory_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_SetSharedMemory_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_SetSharedMemory_Params.shmRegion
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, shared_memory$.WritableSharedMemoryRegion, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_SetSharedMemory_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositor_SetSharedMemory_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_SetSharedMemory_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.shmRegion =
        decoder.decodeStructPointer(shared_memory$.WritableSharedMemoryRegion);
    return val;
  };

  SynchronousCompositor_SetSharedMemory_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_SetSharedMemory_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(shared_memory$.WritableSharedMemoryRegion, val.shmRegion);
  };
  function SynchronousCompositor_SetSharedMemory_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_SetSharedMemory_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
    this.result = null;
  };
  SynchronousCompositor_SetSharedMemory_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_SetSharedMemory_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate SynchronousCompositor_SetSharedMemory_ResponseParams.result
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, SyncCompositorCommonRendererParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_SetSharedMemory_ResponseParams.encodedSize = codec.kStructHeaderSize + 16;

  SynchronousCompositor_SetSharedMemory_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_SetSharedMemory_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.result =
        decoder.decodeStructPointer(SyncCompositorCommonRendererParams);
    return val;
  };

  SynchronousCompositor_SetSharedMemory_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_SetSharedMemory_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(SyncCompositorCommonRendererParams, val.result);
  };
  function SynchronousCompositor_DemandDrawSw_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_DemandDrawSw_Params.prototype.initDefaults_ = function() {
    this.drawParams = null;
  };
  SynchronousCompositor_DemandDrawSw_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_DemandDrawSw_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_DemandDrawSw_Params.drawParams
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, SyncCompositorDemandDrawSwParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_DemandDrawSw_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositor_DemandDrawSw_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_DemandDrawSw_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.drawParams =
        decoder.decodeStructPointer(SyncCompositorDemandDrawSwParams);
    return val;
  };

  SynchronousCompositor_DemandDrawSw_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_DemandDrawSw_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(SyncCompositorDemandDrawSwParams, val.drawParams);
  };
  function SynchronousCompositor_DemandDrawSw_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_DemandDrawSw_ResponseParams.prototype.initDefaults_ = function() {
    this.result = null;
    this.metadataVersion = 0;
    this.metaData = null;
  };
  SynchronousCompositor_DemandDrawSw_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_DemandDrawSw_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_DemandDrawSw_ResponseParams.result
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, SyncCompositorCommonRendererParams, false);
    if (err !== validator.validationError.NONE)
        return err;



    // validate SynchronousCompositor_DemandDrawSw_ResponseParams.metaData
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, compositor_frame_metadata$.CompositorFrameMetadata, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_DemandDrawSw_ResponseParams.encodedSize = codec.kStructHeaderSize + 24;

  SynchronousCompositor_DemandDrawSw_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_DemandDrawSw_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStructPointer(SyncCompositorCommonRendererParams);
    val.metadataVersion =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.metaData =
        decoder.decodeStructPointer(compositor_frame_metadata$.CompositorFrameMetadata);
    return val;
  };

  SynchronousCompositor_DemandDrawSw_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_DemandDrawSw_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(SyncCompositorCommonRendererParams, val.result);
    encoder.encodeStruct(codec.Uint32, val.metadataVersion);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(compositor_frame_metadata$.CompositorFrameMetadata, val.metaData);
  };
  function SynchronousCompositor_WillSkipDraw_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_WillSkipDraw_Params.prototype.initDefaults_ = function() {
  };
  SynchronousCompositor_WillSkipDraw_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_WillSkipDraw_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_WillSkipDraw_Params.encodedSize = codec.kStructHeaderSize + 0;

  SynchronousCompositor_WillSkipDraw_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_WillSkipDraw_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SynchronousCompositor_WillSkipDraw_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_WillSkipDraw_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SynchronousCompositor_ZeroSharedMemory_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_ZeroSharedMemory_Params.prototype.initDefaults_ = function() {
  };
  SynchronousCompositor_ZeroSharedMemory_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_ZeroSharedMemory_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_ZeroSharedMemory_Params.encodedSize = codec.kStructHeaderSize + 0;

  SynchronousCompositor_ZeroSharedMemory_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_ZeroSharedMemory_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SynchronousCompositor_ZeroSharedMemory_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_ZeroSharedMemory_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SynchronousCompositor_ZoomBy_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_ZoomBy_Params.prototype.initDefaults_ = function() {
    this.delta = 0;
    this.anchor = null;
  };
  SynchronousCompositor_ZoomBy_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_ZoomBy_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate SynchronousCompositor_ZoomBy_Params.anchor
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, geometry$.Point, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_ZoomBy_Params.encodedSize = codec.kStructHeaderSize + 16;

  SynchronousCompositor_ZoomBy_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_ZoomBy_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.delta =
        decoder.decodeStruct(codec.Float);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.anchor =
        decoder.decodeStructPointer(geometry$.Point);
    return val;
  };

  SynchronousCompositor_ZoomBy_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_ZoomBy_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Float, val.delta);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(geometry$.Point, val.anchor);
  };
  function SynchronousCompositor_ZoomBy_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_ZoomBy_ResponseParams.prototype.initDefaults_ = function() {
    this.result = null;
  };
  SynchronousCompositor_ZoomBy_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_ZoomBy_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_ZoomBy_ResponseParams.result
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, SyncCompositorCommonRendererParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_ZoomBy_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositor_ZoomBy_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_ZoomBy_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStructPointer(SyncCompositorCommonRendererParams);
    return val;
  };

  SynchronousCompositor_ZoomBy_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_ZoomBy_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(SyncCompositorCommonRendererParams, val.result);
  };
  function SynchronousCompositor_SetMemoryPolicy_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_SetMemoryPolicy_Params.prototype.initDefaults_ = function() {
    this.bytesLimit = 0;
  };
  SynchronousCompositor_SetMemoryPolicy_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_SetMemoryPolicy_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  SynchronousCompositor_SetMemoryPolicy_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositor_SetMemoryPolicy_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_SetMemoryPolicy_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.bytesLimit =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  SynchronousCompositor_SetMemoryPolicy_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_SetMemoryPolicy_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.bytesLimit);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function SynchronousCompositor_ReclaimResources_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_ReclaimResources_Params.prototype.initDefaults_ = function() {
    this.layerTreeFrameSinkId = 0;
    this.resources = null;
  };
  SynchronousCompositor_ReclaimResources_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_ReclaimResources_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate SynchronousCompositor_ReclaimResources_Params.resources
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 8, 8, new codec.PointerTo(returned_resource$.ReturnedResource), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_ReclaimResources_Params.encodedSize = codec.kStructHeaderSize + 16;

  SynchronousCompositor_ReclaimResources_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_ReclaimResources_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.layerTreeFrameSinkId =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.resources =
        decoder.decodeArrayPointer(new codec.PointerTo(returned_resource$.ReturnedResource));
    return val;
  };

  SynchronousCompositor_ReclaimResources_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_ReclaimResources_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.layerTreeFrameSinkId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeArrayPointer(new codec.PointerTo(returned_resource$.ReturnedResource), val.resources);
  };
  function SynchronousCompositor_SetScroll_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_SetScroll_Params.prototype.initDefaults_ = function() {
    this.offset = null;
  };
  SynchronousCompositor_SetScroll_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_SetScroll_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_SetScroll_Params.offset
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, geometry$.ScrollOffset, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_SetScroll_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositor_SetScroll_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_SetScroll_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.offset =
        decoder.decodeStructPointer(geometry$.ScrollOffset);
    return val;
  };

  SynchronousCompositor_SetScroll_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_SetScroll_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(geometry$.ScrollOffset, val.offset);
  };
  function SynchronousCompositor_BeginFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_BeginFrame_Params.prototype.initDefaults_ = function() {
    this.args = null;
    this.timingDetails = null;
  };
  SynchronousCompositor_BeginFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_BeginFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_BeginFrame_Params.args
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, begin_frame_args$.BeginFrameArgs, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositor_BeginFrame_Params.timingDetails
    err = messageValidator.validateMapPointer(offset + codec.kStructHeaderSize + 8, false, codec.Uint32, new codec.PointerTo(frame_timing_details$.FrameTimingDetails), false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositor_BeginFrame_Params.encodedSize = codec.kStructHeaderSize + 16;

  SynchronousCompositor_BeginFrame_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_BeginFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.args =
        decoder.decodeStructPointer(begin_frame_args$.BeginFrameArgs);
    val.timingDetails =
        decoder.decodeMapPointer(codec.Uint32, new codec.PointerTo(frame_timing_details$.FrameTimingDetails));
    return val;
  };

  SynchronousCompositor_BeginFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_BeginFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(begin_frame_args$.BeginFrameArgs, val.args);
    encoder.encodeMapPointer(codec.Uint32, new codec.PointerTo(frame_timing_details$.FrameTimingDetails), val.timingDetails);
  };
  function SynchronousCompositor_SetBeginFrameSourcePaused_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositor_SetBeginFrameSourcePaused_Params.prototype.initDefaults_ = function() {
    this.paused = false;
  };
  SynchronousCompositor_SetBeginFrameSourcePaused_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositor_SetBeginFrameSourcePaused_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  SynchronousCompositor_SetBeginFrameSourcePaused_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositor_SetBeginFrameSourcePaused_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositor_SetBeginFrameSourcePaused_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.paused = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  SynchronousCompositor_SetBeginFrameSourcePaused_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositor_SetBeginFrameSourcePaused_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.paused & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params.prototype.initDefaults_ = function() {
  };
  SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params.encodedSize = codec.kStructHeaderSize + 0;

  SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function SynchronousCompositorHost_UpdateState_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositorHost_UpdateState_Params.prototype.initDefaults_ = function() {
    this.params = null;
  };
  SynchronousCompositorHost_UpdateState_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositorHost_UpdateState_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositorHost_UpdateState_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, SyncCompositorCommonRendererParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositorHost_UpdateState_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositorHost_UpdateState_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositorHost_UpdateState_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.params =
        decoder.decodeStructPointer(SyncCompositorCommonRendererParams);
    return val;
  };

  SynchronousCompositorHost_UpdateState_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositorHost_UpdateState_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(SyncCompositorCommonRendererParams, val.params);
  };
  function SynchronousCompositorHost_SetNeedsBeginFrames_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositorHost_SetNeedsBeginFrames_Params.prototype.initDefaults_ = function() {
    this.needsBeginFrames = false;
  };
  SynchronousCompositorHost_SetNeedsBeginFrames_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositorHost_SetNeedsBeginFrames_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  SynchronousCompositorHost_SetNeedsBeginFrames_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositorHost_SetNeedsBeginFrames_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositorHost_SetNeedsBeginFrames_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.needsBeginFrames = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  SynchronousCompositorHost_SetNeedsBeginFrames_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositorHost_SetNeedsBeginFrames_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.needsBeginFrames & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function SynchronousCompositorControlHost_ReturnFrame_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositorControlHost_ReturnFrame_Params.prototype.initDefaults_ = function() {
    this.layerTreeFrameSinkId = 0;
    this.metadataVersion = 0;
    this.localSurfaceId = null;
    this.frame = null;
    this.hitTestRegionList = null;
  };
  SynchronousCompositorControlHost_ReturnFrame_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositorControlHost_ReturnFrame_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    // validate SynchronousCompositorControlHost_ReturnFrame_Params.localSurfaceId
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, local_surface_id$.LocalSurfaceId, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositorControlHost_ReturnFrame_Params.frame
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, compositor_frame$.CompositorFrame, true);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositorControlHost_ReturnFrame_Params.hitTestRegionList
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, hit_test_region_list$.HitTestRegionList, true);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositorControlHost_ReturnFrame_Params.encodedSize = codec.kStructHeaderSize + 32;

  SynchronousCompositorControlHost_ReturnFrame_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositorControlHost_ReturnFrame_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.layerTreeFrameSinkId =
        decoder.decodeStruct(codec.Uint32);
    val.metadataVersion =
        decoder.decodeStruct(codec.Uint32);
    val.localSurfaceId =
        decoder.decodeStructPointer(local_surface_id$.LocalSurfaceId);
    val.frame =
        decoder.decodeStructPointer(compositor_frame$.CompositorFrame);
    val.hitTestRegionList =
        decoder.decodeStructPointer(hit_test_region_list$.HitTestRegionList);
    return val;
  };

  SynchronousCompositorControlHost_ReturnFrame_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositorControlHost_ReturnFrame_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.layerTreeFrameSinkId);
    encoder.encodeStruct(codec.Uint32, val.metadataVersion);
    encoder.encodeStructPointer(local_surface_id$.LocalSurfaceId, val.localSurfaceId);
    encoder.encodeStructPointer(compositor_frame$.CompositorFrame, val.frame);
    encoder.encodeStructPointer(hit_test_region_list$.HitTestRegionList, val.hitTestRegionList);
  };
  function SynchronousCompositorControlHost_BeginFrameResponse_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SynchronousCompositorControlHost_BeginFrameResponse_Params.prototype.initDefaults_ = function() {
    this.params = null;
  };
  SynchronousCompositorControlHost_BeginFrameResponse_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SynchronousCompositorControlHost_BeginFrameResponse_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate SynchronousCompositorControlHost_BeginFrameResponse_Params.params
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, SyncCompositorCommonRendererParams, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SynchronousCompositorControlHost_BeginFrameResponse_Params.encodedSize = codec.kStructHeaderSize + 8;

  SynchronousCompositorControlHost_BeginFrameResponse_Params.decode = function(decoder) {
    var packed;
    var val = new SynchronousCompositorControlHost_BeginFrameResponse_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.params =
        decoder.decodeStructPointer(SyncCompositorCommonRendererParams);
    return val;
  };

  SynchronousCompositorControlHost_BeginFrameResponse_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SynchronousCompositorControlHost_BeginFrameResponse_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(SyncCompositorCommonRendererParams, val.params);
  };
  var kSynchronousCompositor_DemandDrawHwAsync_Name = 0;
  var kSynchronousCompositor_DemandDrawHw_Name = 1;
  var kSynchronousCompositor_SetSharedMemory_Name = 2;
  var kSynchronousCompositor_DemandDrawSw_Name = 3;
  var kSynchronousCompositor_WillSkipDraw_Name = 4;
  var kSynchronousCompositor_ZeroSharedMemory_Name = 5;
  var kSynchronousCompositor_ZoomBy_Name = 6;
  var kSynchronousCompositor_SetMemoryPolicy_Name = 7;
  var kSynchronousCompositor_ReclaimResources_Name = 8;
  var kSynchronousCompositor_SetScroll_Name = 9;
  var kSynchronousCompositor_BeginFrame_Name = 10;
  var kSynchronousCompositor_SetBeginFrameSourcePaused_Name = 11;

  function SynchronousCompositorPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(SynchronousCompositor,
                                                   handleOrPtrInfo);
  }

  function SynchronousCompositorAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        SynchronousCompositor, associatedInterfacePtrInfo);
  }

  SynchronousCompositorAssociatedPtr.prototype =
      Object.create(SynchronousCompositorPtr.prototype);
  SynchronousCompositorAssociatedPtr.prototype.constructor =
      SynchronousCompositorAssociatedPtr;

  function SynchronousCompositorProxy(receiver) {
    this.receiver_ = receiver;
  }
  SynchronousCompositorPtr.prototype.demandDrawHwAsync = function() {
    return SynchronousCompositorProxy.prototype.demandDrawHwAsync
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.demandDrawHwAsync = function(drawParams) {
    var params_ = new SynchronousCompositor_DemandDrawHwAsync_Params();
    params_.drawParams = drawParams;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositor_DemandDrawHwAsync_Name,
        codec.align(SynchronousCompositor_DemandDrawHwAsync_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositor_DemandDrawHwAsync_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorPtr.prototype.demandDrawHw = function() {
    return SynchronousCompositorProxy.prototype.demandDrawHw
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.demandDrawHw = function(drawParams) {
    var params_ = new SynchronousCompositor_DemandDrawHw_Params();
    params_.drawParams = drawParams;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kSynchronousCompositor_DemandDrawHw_Name,
          codec.align(SynchronousCompositor_DemandDrawHw_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(SynchronousCompositor_DemandDrawHw_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(SynchronousCompositor_DemandDrawHw_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  SynchronousCompositorPtr.prototype.setSharedMemory = function() {
    return SynchronousCompositorProxy.prototype.setSharedMemory
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.setSharedMemory = function(shmRegion) {
    var params_ = new SynchronousCompositor_SetSharedMemory_Params();
    params_.shmRegion = shmRegion;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kSynchronousCompositor_SetSharedMemory_Name,
          codec.align(SynchronousCompositor_SetSharedMemory_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(SynchronousCompositor_SetSharedMemory_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(SynchronousCompositor_SetSharedMemory_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  SynchronousCompositorPtr.prototype.demandDrawSw = function() {
    return SynchronousCompositorProxy.prototype.demandDrawSw
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.demandDrawSw = function(drawParams) {
    var params_ = new SynchronousCompositor_DemandDrawSw_Params();
    params_.drawParams = drawParams;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kSynchronousCompositor_DemandDrawSw_Name,
          codec.align(SynchronousCompositor_DemandDrawSw_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(SynchronousCompositor_DemandDrawSw_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(SynchronousCompositor_DemandDrawSw_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  SynchronousCompositorPtr.prototype.willSkipDraw = function() {
    return SynchronousCompositorProxy.prototype.willSkipDraw
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.willSkipDraw = function() {
    var params_ = new SynchronousCompositor_WillSkipDraw_Params();
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositor_WillSkipDraw_Name,
        codec.align(SynchronousCompositor_WillSkipDraw_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositor_WillSkipDraw_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorPtr.prototype.zeroSharedMemory = function() {
    return SynchronousCompositorProxy.prototype.zeroSharedMemory
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.zeroSharedMemory = function() {
    var params_ = new SynchronousCompositor_ZeroSharedMemory_Params();
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositor_ZeroSharedMemory_Name,
        codec.align(SynchronousCompositor_ZeroSharedMemory_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositor_ZeroSharedMemory_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorPtr.prototype.zoomBy = function() {
    return SynchronousCompositorProxy.prototype.zoomBy
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.zoomBy = function(delta, anchor) {
    var params_ = new SynchronousCompositor_ZoomBy_Params();
    params_.delta = delta;
    params_.anchor = anchor;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kSynchronousCompositor_ZoomBy_Name,
          codec.align(SynchronousCompositor_ZoomBy_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(SynchronousCompositor_ZoomBy_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(SynchronousCompositor_ZoomBy_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  SynchronousCompositorPtr.prototype.setMemoryPolicy = function() {
    return SynchronousCompositorProxy.prototype.setMemoryPolicy
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.setMemoryPolicy = function(bytesLimit) {
    var params_ = new SynchronousCompositor_SetMemoryPolicy_Params();
    params_.bytesLimit = bytesLimit;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositor_SetMemoryPolicy_Name,
        codec.align(SynchronousCompositor_SetMemoryPolicy_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositor_SetMemoryPolicy_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorPtr.prototype.reclaimResources = function() {
    return SynchronousCompositorProxy.prototype.reclaimResources
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.reclaimResources = function(layerTreeFrameSinkId, resources) {
    var params_ = new SynchronousCompositor_ReclaimResources_Params();
    params_.layerTreeFrameSinkId = layerTreeFrameSinkId;
    params_.resources = resources;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositor_ReclaimResources_Name,
        codec.align(SynchronousCompositor_ReclaimResources_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositor_ReclaimResources_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorPtr.prototype.setScroll = function() {
    return SynchronousCompositorProxy.prototype.setScroll
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.setScroll = function(offset) {
    var params_ = new SynchronousCompositor_SetScroll_Params();
    params_.offset = offset;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositor_SetScroll_Name,
        codec.align(SynchronousCompositor_SetScroll_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositor_SetScroll_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorPtr.prototype.beginFrame = function() {
    return SynchronousCompositorProxy.prototype.beginFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.beginFrame = function(args, timingDetails) {
    var params_ = new SynchronousCompositor_BeginFrame_Params();
    params_.args = args;
    params_.timingDetails = timingDetails;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositor_BeginFrame_Name,
        codec.align(SynchronousCompositor_BeginFrame_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositor_BeginFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorPtr.prototype.setBeginFrameSourcePaused = function() {
    return SynchronousCompositorProxy.prototype.setBeginFrameSourcePaused
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorProxy.prototype.setBeginFrameSourcePaused = function(paused) {
    var params_ = new SynchronousCompositor_SetBeginFrameSourcePaused_Params();
    params_.paused = paused;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositor_SetBeginFrameSourcePaused_Name,
        codec.align(SynchronousCompositor_SetBeginFrameSourcePaused_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositor_SetBeginFrameSourcePaused_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function SynchronousCompositorStub(delegate) {
    this.delegate_ = delegate;
  }
  SynchronousCompositorStub.prototype.demandDrawHwAsync = function(drawParams) {
    return this.delegate_ && this.delegate_.demandDrawHwAsync && this.delegate_.demandDrawHwAsync(drawParams);
  }
  SynchronousCompositorStub.prototype.demandDrawHw = function(drawParams) {
    return this.delegate_ && this.delegate_.demandDrawHw && this.delegate_.demandDrawHw(drawParams);
  }
  SynchronousCompositorStub.prototype.setSharedMemory = function(shmRegion) {
    return this.delegate_ && this.delegate_.setSharedMemory && this.delegate_.setSharedMemory(shmRegion);
  }
  SynchronousCompositorStub.prototype.demandDrawSw = function(drawParams) {
    return this.delegate_ && this.delegate_.demandDrawSw && this.delegate_.demandDrawSw(drawParams);
  }
  SynchronousCompositorStub.prototype.willSkipDraw = function() {
    return this.delegate_ && this.delegate_.willSkipDraw && this.delegate_.willSkipDraw();
  }
  SynchronousCompositorStub.prototype.zeroSharedMemory = function() {
    return this.delegate_ && this.delegate_.zeroSharedMemory && this.delegate_.zeroSharedMemory();
  }
  SynchronousCompositorStub.prototype.zoomBy = function(delta, anchor) {
    return this.delegate_ && this.delegate_.zoomBy && this.delegate_.zoomBy(delta, anchor);
  }
  SynchronousCompositorStub.prototype.setMemoryPolicy = function(bytesLimit) {
    return this.delegate_ && this.delegate_.setMemoryPolicy && this.delegate_.setMemoryPolicy(bytesLimit);
  }
  SynchronousCompositorStub.prototype.reclaimResources = function(layerTreeFrameSinkId, resources) {
    return this.delegate_ && this.delegate_.reclaimResources && this.delegate_.reclaimResources(layerTreeFrameSinkId, resources);
  }
  SynchronousCompositorStub.prototype.setScroll = function(offset) {
    return this.delegate_ && this.delegate_.setScroll && this.delegate_.setScroll(offset);
  }
  SynchronousCompositorStub.prototype.beginFrame = function(args, timingDetails) {
    return this.delegate_ && this.delegate_.beginFrame && this.delegate_.beginFrame(args, timingDetails);
  }
  SynchronousCompositorStub.prototype.setBeginFrameSourcePaused = function(paused) {
    return this.delegate_ && this.delegate_.setBeginFrameSourcePaused && this.delegate_.setBeginFrameSourcePaused(paused);
  }

  SynchronousCompositorStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSynchronousCompositor_DemandDrawHwAsync_Name:
      var params = reader.decodeStruct(SynchronousCompositor_DemandDrawHwAsync_Params);
      this.demandDrawHwAsync(params.drawParams);
      return true;
    case kSynchronousCompositor_WillSkipDraw_Name:
      var params = reader.decodeStruct(SynchronousCompositor_WillSkipDraw_Params);
      this.willSkipDraw();
      return true;
    case kSynchronousCompositor_ZeroSharedMemory_Name:
      var params = reader.decodeStruct(SynchronousCompositor_ZeroSharedMemory_Params);
      this.zeroSharedMemory();
      return true;
    case kSynchronousCompositor_SetMemoryPolicy_Name:
      var params = reader.decodeStruct(SynchronousCompositor_SetMemoryPolicy_Params);
      this.setMemoryPolicy(params.bytesLimit);
      return true;
    case kSynchronousCompositor_ReclaimResources_Name:
      var params = reader.decodeStruct(SynchronousCompositor_ReclaimResources_Params);
      this.reclaimResources(params.layerTreeFrameSinkId, params.resources);
      return true;
    case kSynchronousCompositor_SetScroll_Name:
      var params = reader.decodeStruct(SynchronousCompositor_SetScroll_Params);
      this.setScroll(params.offset);
      return true;
    case kSynchronousCompositor_BeginFrame_Name:
      var params = reader.decodeStruct(SynchronousCompositor_BeginFrame_Params);
      this.beginFrame(params.args, params.timingDetails);
      return true;
    case kSynchronousCompositor_SetBeginFrameSourcePaused_Name:
      var params = reader.decodeStruct(SynchronousCompositor_SetBeginFrameSourcePaused_Params);
      this.setBeginFrameSourcePaused(params.paused);
      return true;
    default:
      return false;
    }
  };

  SynchronousCompositorStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSynchronousCompositor_DemandDrawHw_Name:
      var params = reader.decodeStruct(SynchronousCompositor_DemandDrawHw_Params);
      this.demandDrawHw(params.drawParams).then(function(response) {
        var responseParams =
            new SynchronousCompositor_DemandDrawHw_ResponseParams();
        responseParams.result = response.result;
        responseParams.layerTreeFrameSinkId = response.layerTreeFrameSinkId;
        responseParams.metadataVersion = response.metadataVersion;
        responseParams.localSurfaceId = response.localSurfaceId;
        responseParams.frame = response.frame;
        responseParams.hitTestRegionList = response.hitTestRegionList;
        var builder = new codec.MessageV1Builder(
            kSynchronousCompositor_DemandDrawHw_Name,
            codec.align(SynchronousCompositor_DemandDrawHw_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(SynchronousCompositor_DemandDrawHw_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kSynchronousCompositor_SetSharedMemory_Name:
      var params = reader.decodeStruct(SynchronousCompositor_SetSharedMemory_Params);
      this.setSharedMemory(params.shmRegion).then(function(response) {
        var responseParams =
            new SynchronousCompositor_SetSharedMemory_ResponseParams();
        responseParams.success = response.success;
        responseParams.result = response.result;
        var builder = new codec.MessageV1Builder(
            kSynchronousCompositor_SetSharedMemory_Name,
            codec.align(SynchronousCompositor_SetSharedMemory_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(SynchronousCompositor_SetSharedMemory_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kSynchronousCompositor_DemandDrawSw_Name:
      var params = reader.decodeStruct(SynchronousCompositor_DemandDrawSw_Params);
      this.demandDrawSw(params.drawParams).then(function(response) {
        var responseParams =
            new SynchronousCompositor_DemandDrawSw_ResponseParams();
        responseParams.result = response.result;
        responseParams.metadataVersion = response.metadataVersion;
        responseParams.metaData = response.metaData;
        var builder = new codec.MessageV1Builder(
            kSynchronousCompositor_DemandDrawSw_Name,
            codec.align(SynchronousCompositor_DemandDrawSw_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(SynchronousCompositor_DemandDrawSw_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kSynchronousCompositor_ZoomBy_Name:
      var params = reader.decodeStruct(SynchronousCompositor_ZoomBy_Params);
      this.zoomBy(params.delta, params.anchor).then(function(response) {
        var responseParams =
            new SynchronousCompositor_ZoomBy_ResponseParams();
        responseParams.result = response.result;
        var builder = new codec.MessageV1Builder(
            kSynchronousCompositor_ZoomBy_Name,
            codec.align(SynchronousCompositor_ZoomBy_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(SynchronousCompositor_ZoomBy_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateSynchronousCompositorRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kSynchronousCompositor_DemandDrawHwAsync_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositor_DemandDrawHwAsync_Params;
      break;
      case kSynchronousCompositor_DemandDrawHw_Name:
        if (message.expectsResponse())
          paramsClass = SynchronousCompositor_DemandDrawHw_Params;
      break;
      case kSynchronousCompositor_SetSharedMemory_Name:
        if (message.expectsResponse())
          paramsClass = SynchronousCompositor_SetSharedMemory_Params;
      break;
      case kSynchronousCompositor_DemandDrawSw_Name:
        if (message.expectsResponse())
          paramsClass = SynchronousCompositor_DemandDrawSw_Params;
      break;
      case kSynchronousCompositor_WillSkipDraw_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositor_WillSkipDraw_Params;
      break;
      case kSynchronousCompositor_ZeroSharedMemory_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositor_ZeroSharedMemory_Params;
      break;
      case kSynchronousCompositor_ZoomBy_Name:
        if (message.expectsResponse())
          paramsClass = SynchronousCompositor_ZoomBy_Params;
      break;
      case kSynchronousCompositor_SetMemoryPolicy_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositor_SetMemoryPolicy_Params;
      break;
      case kSynchronousCompositor_ReclaimResources_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositor_ReclaimResources_Params;
      break;
      case kSynchronousCompositor_SetScroll_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositor_SetScroll_Params;
      break;
      case kSynchronousCompositor_BeginFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositor_BeginFrame_Params;
      break;
      case kSynchronousCompositor_SetBeginFrameSourcePaused_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositor_SetBeginFrameSourcePaused_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateSynchronousCompositorResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kSynchronousCompositor_DemandDrawHw_Name:
        if (message.isResponse())
          paramsClass = SynchronousCompositor_DemandDrawHw_ResponseParams;
        break;
      case kSynchronousCompositor_SetSharedMemory_Name:
        if (message.isResponse())
          paramsClass = SynchronousCompositor_SetSharedMemory_ResponseParams;
        break;
      case kSynchronousCompositor_DemandDrawSw_Name:
        if (message.isResponse())
          paramsClass = SynchronousCompositor_DemandDrawSw_ResponseParams;
        break;
      case kSynchronousCompositor_ZoomBy_Name:
        if (message.isResponse())
          paramsClass = SynchronousCompositor_ZoomBy_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var SynchronousCompositor = {
    name: 'blink.mojom.SynchronousCompositor',
    kVersion: 0,
    ptrClass: SynchronousCompositorPtr,
    proxyClass: SynchronousCompositorProxy,
    stubClass: SynchronousCompositorStub,
    validateRequest: validateSynchronousCompositorRequest,
    validateResponse: validateSynchronousCompositorResponse,
  };
  SynchronousCompositorStub.prototype.validator = validateSynchronousCompositorRequest;
  SynchronousCompositorProxy.prototype.validator = validateSynchronousCompositorResponse;
  var kSynchronousCompositorHost_LayerTreeFrameSinkCreated_Name = 0;
  var kSynchronousCompositorHost_UpdateState_Name = 1;
  var kSynchronousCompositorHost_SetNeedsBeginFrames_Name = 2;

  function SynchronousCompositorHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(SynchronousCompositorHost,
                                                   handleOrPtrInfo);
  }

  function SynchronousCompositorHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        SynchronousCompositorHost, associatedInterfacePtrInfo);
  }

  SynchronousCompositorHostAssociatedPtr.prototype =
      Object.create(SynchronousCompositorHostPtr.prototype);
  SynchronousCompositorHostAssociatedPtr.prototype.constructor =
      SynchronousCompositorHostAssociatedPtr;

  function SynchronousCompositorHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  SynchronousCompositorHostPtr.prototype.layerTreeFrameSinkCreated = function() {
    return SynchronousCompositorHostProxy.prototype.layerTreeFrameSinkCreated
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorHostProxy.prototype.layerTreeFrameSinkCreated = function() {
    var params_ = new SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params();
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositorHost_LayerTreeFrameSinkCreated_Name,
        codec.align(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorHostPtr.prototype.updateState = function() {
    return SynchronousCompositorHostProxy.prototype.updateState
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorHostProxy.prototype.updateState = function(params) {
    var params_ = new SynchronousCompositorHost_UpdateState_Params();
    params_.params = params;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositorHost_UpdateState_Name,
        codec.align(SynchronousCompositorHost_UpdateState_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositorHost_UpdateState_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorHostPtr.prototype.setNeedsBeginFrames = function() {
    return SynchronousCompositorHostProxy.prototype.setNeedsBeginFrames
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorHostProxy.prototype.setNeedsBeginFrames = function(needsBeginFrames) {
    var params_ = new SynchronousCompositorHost_SetNeedsBeginFrames_Params();
    params_.needsBeginFrames = needsBeginFrames;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositorHost_SetNeedsBeginFrames_Name,
        codec.align(SynchronousCompositorHost_SetNeedsBeginFrames_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositorHost_SetNeedsBeginFrames_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function SynchronousCompositorHostStub(delegate) {
    this.delegate_ = delegate;
  }
  SynchronousCompositorHostStub.prototype.layerTreeFrameSinkCreated = function() {
    return this.delegate_ && this.delegate_.layerTreeFrameSinkCreated && this.delegate_.layerTreeFrameSinkCreated();
  }
  SynchronousCompositorHostStub.prototype.updateState = function(params) {
    return this.delegate_ && this.delegate_.updateState && this.delegate_.updateState(params);
  }
  SynchronousCompositorHostStub.prototype.setNeedsBeginFrames = function(needsBeginFrames) {
    return this.delegate_ && this.delegate_.setNeedsBeginFrames && this.delegate_.setNeedsBeginFrames(needsBeginFrames);
  }

  SynchronousCompositorHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSynchronousCompositorHost_LayerTreeFrameSinkCreated_Name:
      var params = reader.decodeStruct(SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params);
      this.layerTreeFrameSinkCreated();
      return true;
    case kSynchronousCompositorHost_UpdateState_Name:
      var params = reader.decodeStruct(SynchronousCompositorHost_UpdateState_Params);
      this.updateState(params.params);
      return true;
    case kSynchronousCompositorHost_SetNeedsBeginFrames_Name:
      var params = reader.decodeStruct(SynchronousCompositorHost_SetNeedsBeginFrames_Params);
      this.setNeedsBeginFrames(params.needsBeginFrames);
      return true;
    default:
      return false;
    }
  };

  SynchronousCompositorHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateSynchronousCompositorHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kSynchronousCompositorHost_LayerTreeFrameSinkCreated_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositorHost_LayerTreeFrameSinkCreated_Params;
      break;
      case kSynchronousCompositorHost_UpdateState_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositorHost_UpdateState_Params;
      break;
      case kSynchronousCompositorHost_SetNeedsBeginFrames_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositorHost_SetNeedsBeginFrames_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateSynchronousCompositorHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var SynchronousCompositorHost = {
    name: 'blink.mojom.SynchronousCompositorHost',
    kVersion: 0,
    ptrClass: SynchronousCompositorHostPtr,
    proxyClass: SynchronousCompositorHostProxy,
    stubClass: SynchronousCompositorHostStub,
    validateRequest: validateSynchronousCompositorHostRequest,
    validateResponse: null,
  };
  SynchronousCompositorHostStub.prototype.validator = validateSynchronousCompositorHostRequest;
  SynchronousCompositorHostProxy.prototype.validator = null;
  var kSynchronousCompositorControlHost_ReturnFrame_Name = 0;
  var kSynchronousCompositorControlHost_BeginFrameResponse_Name = 1;

  function SynchronousCompositorControlHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(SynchronousCompositorControlHost,
                                                   handleOrPtrInfo);
  }

  function SynchronousCompositorControlHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        SynchronousCompositorControlHost, associatedInterfacePtrInfo);
  }

  SynchronousCompositorControlHostAssociatedPtr.prototype =
      Object.create(SynchronousCompositorControlHostPtr.prototype);
  SynchronousCompositorControlHostAssociatedPtr.prototype.constructor =
      SynchronousCompositorControlHostAssociatedPtr;

  function SynchronousCompositorControlHostProxy(receiver) {
    this.receiver_ = receiver;
  }
  SynchronousCompositorControlHostPtr.prototype.returnFrame = function() {
    return SynchronousCompositorControlHostProxy.prototype.returnFrame
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorControlHostProxy.prototype.returnFrame = function(layerTreeFrameSinkId, metadataVersion, localSurfaceId, frame, hitTestRegionList) {
    var params_ = new SynchronousCompositorControlHost_ReturnFrame_Params();
    params_.layerTreeFrameSinkId = layerTreeFrameSinkId;
    params_.metadataVersion = metadataVersion;
    params_.localSurfaceId = localSurfaceId;
    params_.frame = frame;
    params_.hitTestRegionList = hitTestRegionList;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositorControlHost_ReturnFrame_Name,
        codec.align(SynchronousCompositorControlHost_ReturnFrame_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositorControlHost_ReturnFrame_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  SynchronousCompositorControlHostPtr.prototype.beginFrameResponse = function() {
    return SynchronousCompositorControlHostProxy.prototype.beginFrameResponse
        .apply(this.ptr.getProxy(), arguments);
  };

  SynchronousCompositorControlHostProxy.prototype.beginFrameResponse = function(params) {
    var params_ = new SynchronousCompositorControlHost_BeginFrameResponse_Params();
    params_.params = params;
    var builder = new codec.MessageV0Builder(
        kSynchronousCompositorControlHost_BeginFrameResponse_Name,
        codec.align(SynchronousCompositorControlHost_BeginFrameResponse_Params.encodedSize));
    builder.encodeStruct(SynchronousCompositorControlHost_BeginFrameResponse_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function SynchronousCompositorControlHostStub(delegate) {
    this.delegate_ = delegate;
  }
  SynchronousCompositorControlHostStub.prototype.returnFrame = function(layerTreeFrameSinkId, metadataVersion, localSurfaceId, frame, hitTestRegionList) {
    return this.delegate_ && this.delegate_.returnFrame && this.delegate_.returnFrame(layerTreeFrameSinkId, metadataVersion, localSurfaceId, frame, hitTestRegionList);
  }
  SynchronousCompositorControlHostStub.prototype.beginFrameResponse = function(params) {
    return this.delegate_ && this.delegate_.beginFrameResponse && this.delegate_.beginFrameResponse(params);
  }

  SynchronousCompositorControlHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kSynchronousCompositorControlHost_ReturnFrame_Name:
      var params = reader.decodeStruct(SynchronousCompositorControlHost_ReturnFrame_Params);
      this.returnFrame(params.layerTreeFrameSinkId, params.metadataVersion, params.localSurfaceId, params.frame, params.hitTestRegionList);
      return true;
    case kSynchronousCompositorControlHost_BeginFrameResponse_Name:
      var params = reader.decodeStruct(SynchronousCompositorControlHost_BeginFrameResponse_Params);
      this.beginFrameResponse(params.params);
      return true;
    default:
      return false;
    }
  };

  SynchronousCompositorControlHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateSynchronousCompositorControlHostRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kSynchronousCompositorControlHost_ReturnFrame_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositorControlHost_ReturnFrame_Params;
      break;
      case kSynchronousCompositorControlHost_BeginFrameResponse_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = SynchronousCompositorControlHost_BeginFrameResponse_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateSynchronousCompositorControlHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var SynchronousCompositorControlHost = {
    name: 'blink.mojom.SynchronousCompositorControlHost',
    kVersion: 0,
    ptrClass: SynchronousCompositorControlHostPtr,
    proxyClass: SynchronousCompositorControlHostProxy,
    stubClass: SynchronousCompositorControlHostStub,
    validateRequest: validateSynchronousCompositorControlHostRequest,
    validateResponse: null,
  };
  SynchronousCompositorControlHostStub.prototype.validator = validateSynchronousCompositorControlHostRequest;
  SynchronousCompositorControlHostProxy.prototype.validator = null;
  exports.SyncCompositorDemandDrawHwParams = SyncCompositorDemandDrawHwParams;
  exports.SyncCompositorDemandDrawSwParams = SyncCompositorDemandDrawSwParams;
  exports.SyncCompositorCommonRendererParams = SyncCompositorCommonRendererParams;
  exports.SynchronousCompositor = SynchronousCompositor;
  exports.SynchronousCompositorPtr = SynchronousCompositorPtr;
  exports.SynchronousCompositorAssociatedPtr = SynchronousCompositorAssociatedPtr;
  exports.SynchronousCompositorHost = SynchronousCompositorHost;
  exports.SynchronousCompositorHostPtr = SynchronousCompositorHostPtr;
  exports.SynchronousCompositorHostAssociatedPtr = SynchronousCompositorHostAssociatedPtr;
  exports.SynchronousCompositorControlHost = SynchronousCompositorControlHost;
  exports.SynchronousCompositorControlHostPtr = SynchronousCompositorControlHostPtr;
  exports.SynchronousCompositorControlHostAssociatedPtr = SynchronousCompositorControlHostAssociatedPtr;
})();