// third_party/blink/public/mojom/service_worker/service_worker_error_type.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/service_worker/service_worker_error_type.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');


  var ServiceWorkerErrorType = {};
  ServiceWorkerErrorType.kNone = 0;
  ServiceWorkerErrorType.kAbort = 1;
  ServiceWorkerErrorType.kActivate = 2;
  ServiceWorkerErrorType.kDisabled = 3;
  ServiceWorkerErrorType.kInstall = 4;
  ServiceWorkerErrorType.kNavigation = 5;
  ServiceWorkerErrorType.kNetwork = 6;
  ServiceWorkerErrorType.kNotFound = 7;
  ServiceWorkerErrorType.kScriptEvaluateFailed = 8;
  ServiceWorkerErrorType.kSecurity = 9;
  ServiceWorkerErrorType.kState = 10;
  ServiceWorkerErrorType.kTimeout = 11;
  ServiceWorkerErrorType.kType = 12;
  ServiceWorkerErrorType.kUnknown = 13;
  ServiceWorkerErrorType.MIN_VALUE = 0,
  ServiceWorkerErrorType.MAX_VALUE = 13,

  ServiceWorkerErrorType.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    }
    return false;
  };

  ServiceWorkerErrorType.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var ServiceWorkerResponseError = {};
  ServiceWorkerResponseError.kUnknown = 0;
  ServiceWorkerResponseError.kPromiseRejected = 1;
  ServiceWorkerResponseError.kDefaultPrevented = 2;
  ServiceWorkerResponseError.kNoV8Instance = 3;
  ServiceWorkerResponseError.kResponseTypeError = 4;
  ServiceWorkerResponseError.kResponseTypeOpaque = 5;
  ServiceWorkerResponseError.kResponseTypeNotBasicOrDefault = 6;
  ServiceWorkerResponseError.kBodyUsed = 7;
  ServiceWorkerResponseError.kResponseTypeOpaqueForClientRequest = 8;
  ServiceWorkerResponseError.kResponseTypeOpaqueRedirect = 9;
  ServiceWorkerResponseError.kBodyLocked = 10;
  ServiceWorkerResponseError.kRedirectedResponseForNotFollowRequest = 11;
  ServiceWorkerResponseError.kDataPipeCreationFailed = 12;
  ServiceWorkerResponseError.kResponseTypeCorsForRequestModeSameOrigin = 13;
  ServiceWorkerResponseError.kResponseBodyBroken = 14;
  ServiceWorkerResponseError.kDisallowedByCorp = 15;
  ServiceWorkerResponseError.MIN_VALUE = 0,
  ServiceWorkerResponseError.MAX_VALUE = 15,

  ServiceWorkerResponseError.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    }
    return false;
  };

  ServiceWorkerResponseError.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.ServiceWorkerErrorType = ServiceWorkerErrorType;
  exports.ServiceWorkerResponseError = ServiceWorkerResponseError;
})();