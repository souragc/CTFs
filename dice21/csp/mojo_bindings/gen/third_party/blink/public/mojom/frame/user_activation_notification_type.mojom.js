// third_party/blink/public/mojom/frame/user_activation_notification_type.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/frame/user_activation_notification_type.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');


  var UserActivationNotificationType = {};
  UserActivationNotificationType.kNone = 0;
  UserActivationNotificationType.kInteraction = 1;
  UserActivationNotificationType.kDevTools = 2;
  UserActivationNotificationType.kExtensionEvent = 3;
  UserActivationNotificationType.kExtensionGuestView = 4;
  UserActivationNotificationType.kExtensionMessaging = 5;
  UserActivationNotificationType.kMedia = 6;
  UserActivationNotificationType.kFileSystemAccess = 7;
  UserActivationNotificationType.kPlugin = 8;
  UserActivationNotificationType.kTest = 9;
  UserActivationNotificationType.kWebScriptExec = 10;
  UserActivationNotificationType.kVoiceSearch = 11;
  UserActivationNotificationType.kExtensionMessagingBothPrivileged = 12;
  UserActivationNotificationType.kExtensionMessagingSenderPrivileged = 13;
  UserActivationNotificationType.kExtensionMessagingReceiverPrivileged = 14;
  UserActivationNotificationType.kExtensionMessagingNeitherPrivileged = 15;
  UserActivationNotificationType.MIN_VALUE = 0,
  UserActivationNotificationType.MAX_VALUE = 15,

  UserActivationNotificationType.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    }
    return false;
  };

  UserActivationNotificationType.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.UserActivationNotificationType = UserActivationNotificationType;
})();