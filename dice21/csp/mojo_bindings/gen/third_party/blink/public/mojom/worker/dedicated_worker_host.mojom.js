// third_party/blink/public/mojom/worker/dedicated_worker_host.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'third_party/blink/public/mojom/worker/dedicated_worker_host.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('blink.mojom');
  var lifecycle$ =
      mojo.internal.exposeNamespace('blink.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'third_party/blink/public/mojom/frame/lifecycle.mojom', '../frame/lifecycle.mojom.js');
  }




  function DedicatedWorkerHostPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(DedicatedWorkerHost,
                                                   handleOrPtrInfo);
  }

  function DedicatedWorkerHostAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        DedicatedWorkerHost, associatedInterfacePtrInfo);
  }

  DedicatedWorkerHostAssociatedPtr.prototype =
      Object.create(DedicatedWorkerHostPtr.prototype);
  DedicatedWorkerHostAssociatedPtr.prototype.constructor =
      DedicatedWorkerHostAssociatedPtr;

  function DedicatedWorkerHostProxy(receiver) {
    this.receiver_ = receiver;
  }

  function DedicatedWorkerHostStub(delegate) {
    this.delegate_ = delegate;
  }

  DedicatedWorkerHostStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  DedicatedWorkerHostStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateDedicatedWorkerHostRequest(messageValidator) {
    return validator.validationError.NONE;
  }

  function validateDedicatedWorkerHostResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var DedicatedWorkerHost = {
    name: 'blink.mojom.DedicatedWorkerHost',
    kVersion: 0,
    ptrClass: DedicatedWorkerHostPtr,
    proxyClass: DedicatedWorkerHostProxy,
    stubClass: DedicatedWorkerHostStub,
    validateRequest: validateDedicatedWorkerHostRequest,
    validateResponse: null,
  };
  DedicatedWorkerHostStub.prototype.validator = validateDedicatedWorkerHostRequest;
  DedicatedWorkerHostProxy.prototype.validator = null;
  exports.DedicatedWorkerHost = DedicatedWorkerHost;
  exports.DedicatedWorkerHostPtr = DedicatedWorkerHostPtr;
  exports.DedicatedWorkerHostAssociatedPtr = DedicatedWorkerHostAssociatedPtr;
})();