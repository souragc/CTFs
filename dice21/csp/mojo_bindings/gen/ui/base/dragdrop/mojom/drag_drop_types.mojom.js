// ui/base/dragdrop/mojom/drag_drop_types.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'ui/base/dragdrop/mojom/drag_drop_types.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('ui.mojom');


  var DragEventSource = {};
  DragEventSource.kMouse = 0;
  DragEventSource.kTouch = 1;
  DragEventSource.MIN_VALUE = 0,
  DragEventSource.MAX_VALUE = 1,

  DragEventSource.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
      return true;
    }
    return false;
  };

  DragEventSource.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var DragOperation = {};
  DragOperation.kNone = 0;
  DragOperation.kCopy = 1;
  DragOperation.kLink = 2;
  DragOperation.kMove = 16;
  DragOperation.MIN_VALUE = 0,
  DragOperation.MAX_VALUE = 16,

  DragOperation.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 16:
      return true;
    }
    return false;
  };

  DragOperation.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.DragEventSource = DragEventSource;
  exports.DragOperation = DragOperation;
})();