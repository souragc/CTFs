// chrome/browser/cart/chrome_cart.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/browser/cart/chrome_cart.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('chromeCart.mojom');
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../url/mojom/url.mojom.js');
  }



  function MerchantCart(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  MerchantCart.prototype.initDefaults_ = function() {
    this.merchant = null;
    this.cartUrl = null;
    this.productImageUrls = null;
  };
  MerchantCart.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  MerchantCart.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MerchantCart.merchant
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate MerchantCart.cartUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate MerchantCart.productImageUrls
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 16, 8, new codec.PointerTo(url$.Url), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  MerchantCart.encodedSize = codec.kStructHeaderSize + 24;

  MerchantCart.decode = function(decoder) {
    var packed;
    var val = new MerchantCart();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.merchant =
        decoder.decodeStruct(codec.String);
    val.cartUrl =
        decoder.decodeStructPointer(url$.Url);
    val.productImageUrls =
        decoder.decodeArrayPointer(new codec.PointerTo(url$.Url));
    return val;
  };

  MerchantCart.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(MerchantCart.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.merchant);
    encoder.encodeStructPointer(url$.Url, val.cartUrl);
    encoder.encodeArrayPointer(new codec.PointerTo(url$.Url), val.productImageUrls);
  };
  function CartHandler_GetMerchantCarts_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_GetMerchantCarts_Params.prototype.initDefaults_ = function() {
  };
  CartHandler_GetMerchantCarts_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_GetMerchantCarts_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_GetMerchantCarts_Params.encodedSize = codec.kStructHeaderSize + 0;

  CartHandler_GetMerchantCarts_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_GetMerchantCarts_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CartHandler_GetMerchantCarts_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_GetMerchantCarts_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CartHandler_GetMerchantCarts_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_GetMerchantCarts_ResponseParams.prototype.initDefaults_ = function() {
    this.carts = null;
  };
  CartHandler_GetMerchantCarts_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_GetMerchantCarts_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CartHandler_GetMerchantCarts_ResponseParams.carts
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 0, 8, new codec.PointerTo(MerchantCart), false, [0], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_GetMerchantCarts_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_GetMerchantCarts_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new CartHandler_GetMerchantCarts_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.carts =
        decoder.decodeArrayPointer(new codec.PointerTo(MerchantCart));
    return val;
  };

  CartHandler_GetMerchantCarts_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_GetMerchantCarts_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeArrayPointer(new codec.PointerTo(MerchantCart), val.carts);
  };
  function CartHandler_HideCartModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_HideCartModule_Params.prototype.initDefaults_ = function() {
  };
  CartHandler_HideCartModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_HideCartModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_HideCartModule_Params.encodedSize = codec.kStructHeaderSize + 0;

  CartHandler_HideCartModule_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_HideCartModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CartHandler_HideCartModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_HideCartModule_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CartHandler_RestoreHiddenCartModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RestoreHiddenCartModule_Params.prototype.initDefaults_ = function() {
  };
  CartHandler_RestoreHiddenCartModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RestoreHiddenCartModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_RestoreHiddenCartModule_Params.encodedSize = codec.kStructHeaderSize + 0;

  CartHandler_RestoreHiddenCartModule_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RestoreHiddenCartModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CartHandler_RestoreHiddenCartModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RestoreHiddenCartModule_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CartHandler_RemoveCartModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RemoveCartModule_Params.prototype.initDefaults_ = function() {
  };
  CartHandler_RemoveCartModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RemoveCartModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_RemoveCartModule_Params.encodedSize = codec.kStructHeaderSize + 0;

  CartHandler_RemoveCartModule_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RemoveCartModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CartHandler_RemoveCartModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RemoveCartModule_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CartHandler_RestoreRemovedCartModule_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RestoreRemovedCartModule_Params.prototype.initDefaults_ = function() {
  };
  CartHandler_RestoreRemovedCartModule_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RestoreRemovedCartModule_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_RestoreRemovedCartModule_Params.encodedSize = codec.kStructHeaderSize + 0;

  CartHandler_RestoreRemovedCartModule_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RestoreRemovedCartModule_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CartHandler_RestoreRemovedCartModule_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RestoreRemovedCartModule_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CartHandler_HideCart_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_HideCart_Params.prototype.initDefaults_ = function() {
    this.cartUrl = null;
  };
  CartHandler_HideCart_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_HideCart_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CartHandler_HideCart_Params.cartUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_HideCart_Params.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_HideCart_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_HideCart_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.cartUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  CartHandler_HideCart_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_HideCart_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.cartUrl);
  };
  function CartHandler_HideCart_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_HideCart_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  CartHandler_HideCart_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_HideCart_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  CartHandler_HideCart_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_HideCart_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new CartHandler_HideCart_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  CartHandler_HideCart_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_HideCart_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function CartHandler_RestoreHiddenCart_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RestoreHiddenCart_Params.prototype.initDefaults_ = function() {
    this.cartUrl = null;
  };
  CartHandler_RestoreHiddenCart_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RestoreHiddenCart_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CartHandler_RestoreHiddenCart_Params.cartUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_RestoreHiddenCart_Params.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_RestoreHiddenCart_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RestoreHiddenCart_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.cartUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  CartHandler_RestoreHiddenCart_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RestoreHiddenCart_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.cartUrl);
  };
  function CartHandler_RestoreHiddenCart_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RestoreHiddenCart_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  CartHandler_RestoreHiddenCart_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RestoreHiddenCart_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  CartHandler_RestoreHiddenCart_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_RestoreHiddenCart_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RestoreHiddenCart_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  CartHandler_RestoreHiddenCart_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RestoreHiddenCart_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function CartHandler_RemoveCart_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RemoveCart_Params.prototype.initDefaults_ = function() {
    this.cartUrl = null;
  };
  CartHandler_RemoveCart_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RemoveCart_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CartHandler_RemoveCart_Params.cartUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_RemoveCart_Params.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_RemoveCart_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RemoveCart_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.cartUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  CartHandler_RemoveCart_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RemoveCart_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.cartUrl);
  };
  function CartHandler_RemoveCart_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RemoveCart_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  CartHandler_RemoveCart_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RemoveCart_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  CartHandler_RemoveCart_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_RemoveCart_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RemoveCart_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  CartHandler_RemoveCart_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RemoveCart_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function CartHandler_RestoreRemovedCart_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RestoreRemovedCart_Params.prototype.initDefaults_ = function() {
    this.cartUrl = null;
  };
  CartHandler_RestoreRemovedCart_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RestoreRemovedCart_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate CartHandler_RestoreRemovedCart_Params.cartUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_RestoreRemovedCart_Params.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_RestoreRemovedCart_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RestoreRemovedCart_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.cartUrl =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  CartHandler_RestoreRemovedCart_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RestoreRemovedCart_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.cartUrl);
  };
  function CartHandler_RestoreRemovedCart_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_RestoreRemovedCart_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  CartHandler_RestoreRemovedCart_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_RestoreRemovedCart_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  CartHandler_RestoreRemovedCart_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_RestoreRemovedCart_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new CartHandler_RestoreRemovedCart_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  CartHandler_RestoreRemovedCart_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_RestoreRemovedCart_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function CartHandler_GetWarmWelcomeVisible_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_GetWarmWelcomeVisible_Params.prototype.initDefaults_ = function() {
  };
  CartHandler_GetWarmWelcomeVisible_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_GetWarmWelcomeVisible_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  CartHandler_GetWarmWelcomeVisible_Params.encodedSize = codec.kStructHeaderSize + 0;

  CartHandler_GetWarmWelcomeVisible_Params.decode = function(decoder) {
    var packed;
    var val = new CartHandler_GetWarmWelcomeVisible_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  CartHandler_GetWarmWelcomeVisible_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_GetWarmWelcomeVisible_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function CartHandler_GetWarmWelcomeVisible_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  CartHandler_GetWarmWelcomeVisible_ResponseParams.prototype.initDefaults_ = function() {
    this.visible = false;
  };
  CartHandler_GetWarmWelcomeVisible_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  CartHandler_GetWarmWelcomeVisible_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  CartHandler_GetWarmWelcomeVisible_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  CartHandler_GetWarmWelcomeVisible_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new CartHandler_GetWarmWelcomeVisible_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.visible = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  CartHandler_GetWarmWelcomeVisible_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(CartHandler_GetWarmWelcomeVisible_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.visible & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  var kCartHandler_GetMerchantCarts_Name = 750199559;
  var kCartHandler_HideCartModule_Name = 479862632;
  var kCartHandler_RestoreHiddenCartModule_Name = 871631183;
  var kCartHandler_RemoveCartModule_Name = 1412253675;
  var kCartHandler_RestoreRemovedCartModule_Name = 1121378043;
  var kCartHandler_HideCart_Name = 1645677504;
  var kCartHandler_RestoreHiddenCart_Name = 20129569;
  var kCartHandler_RemoveCart_Name = 2099038643;
  var kCartHandler_RestoreRemovedCart_Name = 1777770838;
  var kCartHandler_GetWarmWelcomeVisible_Name = 1354910402;

  function CartHandlerPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(CartHandler,
                                                   handleOrPtrInfo);
  }

  function CartHandlerAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        CartHandler, associatedInterfacePtrInfo);
  }

  CartHandlerAssociatedPtr.prototype =
      Object.create(CartHandlerPtr.prototype);
  CartHandlerAssociatedPtr.prototype.constructor =
      CartHandlerAssociatedPtr;

  function CartHandlerProxy(receiver) {
    this.receiver_ = receiver;
  }
  CartHandlerPtr.prototype.getMerchantCarts = function() {
    return CartHandlerProxy.prototype.getMerchantCarts
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.getMerchantCarts = function() {
    var params_ = new CartHandler_GetMerchantCarts_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kCartHandler_GetMerchantCarts_Name,
          codec.align(CartHandler_GetMerchantCarts_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(CartHandler_GetMerchantCarts_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(CartHandler_GetMerchantCarts_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  CartHandlerPtr.prototype.hideCartModule = function() {
    return CartHandlerProxy.prototype.hideCartModule
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.hideCartModule = function() {
    var params_ = new CartHandler_HideCartModule_Params();
    var builder = new codec.MessageV0Builder(
        kCartHandler_HideCartModule_Name,
        codec.align(CartHandler_HideCartModule_Params.encodedSize));
    builder.encodeStruct(CartHandler_HideCartModule_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CartHandlerPtr.prototype.restoreHiddenCartModule = function() {
    return CartHandlerProxy.prototype.restoreHiddenCartModule
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.restoreHiddenCartModule = function() {
    var params_ = new CartHandler_RestoreHiddenCartModule_Params();
    var builder = new codec.MessageV0Builder(
        kCartHandler_RestoreHiddenCartModule_Name,
        codec.align(CartHandler_RestoreHiddenCartModule_Params.encodedSize));
    builder.encodeStruct(CartHandler_RestoreHiddenCartModule_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CartHandlerPtr.prototype.removeCartModule = function() {
    return CartHandlerProxy.prototype.removeCartModule
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.removeCartModule = function() {
    var params_ = new CartHandler_RemoveCartModule_Params();
    var builder = new codec.MessageV0Builder(
        kCartHandler_RemoveCartModule_Name,
        codec.align(CartHandler_RemoveCartModule_Params.encodedSize));
    builder.encodeStruct(CartHandler_RemoveCartModule_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CartHandlerPtr.prototype.restoreRemovedCartModule = function() {
    return CartHandlerProxy.prototype.restoreRemovedCartModule
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.restoreRemovedCartModule = function() {
    var params_ = new CartHandler_RestoreRemovedCartModule_Params();
    var builder = new codec.MessageV0Builder(
        kCartHandler_RestoreRemovedCartModule_Name,
        codec.align(CartHandler_RestoreRemovedCartModule_Params.encodedSize));
    builder.encodeStruct(CartHandler_RestoreRemovedCartModule_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  CartHandlerPtr.prototype.hideCart = function() {
    return CartHandlerProxy.prototype.hideCart
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.hideCart = function(cartUrl) {
    var params_ = new CartHandler_HideCart_Params();
    params_.cartUrl = cartUrl;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kCartHandler_HideCart_Name,
          codec.align(CartHandler_HideCart_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(CartHandler_HideCart_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(CartHandler_HideCart_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  CartHandlerPtr.prototype.restoreHiddenCart = function() {
    return CartHandlerProxy.prototype.restoreHiddenCart
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.restoreHiddenCart = function(cartUrl) {
    var params_ = new CartHandler_RestoreHiddenCart_Params();
    params_.cartUrl = cartUrl;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kCartHandler_RestoreHiddenCart_Name,
          codec.align(CartHandler_RestoreHiddenCart_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(CartHandler_RestoreHiddenCart_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(CartHandler_RestoreHiddenCart_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  CartHandlerPtr.prototype.removeCart = function() {
    return CartHandlerProxy.prototype.removeCart
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.removeCart = function(cartUrl) {
    var params_ = new CartHandler_RemoveCart_Params();
    params_.cartUrl = cartUrl;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kCartHandler_RemoveCart_Name,
          codec.align(CartHandler_RemoveCart_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(CartHandler_RemoveCart_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(CartHandler_RemoveCart_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  CartHandlerPtr.prototype.restoreRemovedCart = function() {
    return CartHandlerProxy.prototype.restoreRemovedCart
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.restoreRemovedCart = function(cartUrl) {
    var params_ = new CartHandler_RestoreRemovedCart_Params();
    params_.cartUrl = cartUrl;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kCartHandler_RestoreRemovedCart_Name,
          codec.align(CartHandler_RestoreRemovedCart_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(CartHandler_RestoreRemovedCart_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(CartHandler_RestoreRemovedCart_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  CartHandlerPtr.prototype.getWarmWelcomeVisible = function() {
    return CartHandlerProxy.prototype.getWarmWelcomeVisible
        .apply(this.ptr.getProxy(), arguments);
  };

  CartHandlerProxy.prototype.getWarmWelcomeVisible = function() {
    var params_ = new CartHandler_GetWarmWelcomeVisible_Params();
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kCartHandler_GetWarmWelcomeVisible_Name,
          codec.align(CartHandler_GetWarmWelcomeVisible_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(CartHandler_GetWarmWelcomeVisible_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(CartHandler_GetWarmWelcomeVisible_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };

  function CartHandlerStub(delegate) {
    this.delegate_ = delegate;
  }
  CartHandlerStub.prototype.getMerchantCarts = function() {
    return this.delegate_ && this.delegate_.getMerchantCarts && this.delegate_.getMerchantCarts();
  }
  CartHandlerStub.prototype.hideCartModule = function() {
    return this.delegate_ && this.delegate_.hideCartModule && this.delegate_.hideCartModule();
  }
  CartHandlerStub.prototype.restoreHiddenCartModule = function() {
    return this.delegate_ && this.delegate_.restoreHiddenCartModule && this.delegate_.restoreHiddenCartModule();
  }
  CartHandlerStub.prototype.removeCartModule = function() {
    return this.delegate_ && this.delegate_.removeCartModule && this.delegate_.removeCartModule();
  }
  CartHandlerStub.prototype.restoreRemovedCartModule = function() {
    return this.delegate_ && this.delegate_.restoreRemovedCartModule && this.delegate_.restoreRemovedCartModule();
  }
  CartHandlerStub.prototype.hideCart = function(cartUrl) {
    return this.delegate_ && this.delegate_.hideCart && this.delegate_.hideCart(cartUrl);
  }
  CartHandlerStub.prototype.restoreHiddenCart = function(cartUrl) {
    return this.delegate_ && this.delegate_.restoreHiddenCart && this.delegate_.restoreHiddenCart(cartUrl);
  }
  CartHandlerStub.prototype.removeCart = function(cartUrl) {
    return this.delegate_ && this.delegate_.removeCart && this.delegate_.removeCart(cartUrl);
  }
  CartHandlerStub.prototype.restoreRemovedCart = function(cartUrl) {
    return this.delegate_ && this.delegate_.restoreRemovedCart && this.delegate_.restoreRemovedCart(cartUrl);
  }
  CartHandlerStub.prototype.getWarmWelcomeVisible = function() {
    return this.delegate_ && this.delegate_.getWarmWelcomeVisible && this.delegate_.getWarmWelcomeVisible();
  }

  CartHandlerStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kCartHandler_HideCartModule_Name:
      var params = reader.decodeStruct(CartHandler_HideCartModule_Params);
      this.hideCartModule();
      return true;
    case kCartHandler_RestoreHiddenCartModule_Name:
      var params = reader.decodeStruct(CartHandler_RestoreHiddenCartModule_Params);
      this.restoreHiddenCartModule();
      return true;
    case kCartHandler_RemoveCartModule_Name:
      var params = reader.decodeStruct(CartHandler_RemoveCartModule_Params);
      this.removeCartModule();
      return true;
    case kCartHandler_RestoreRemovedCartModule_Name:
      var params = reader.decodeStruct(CartHandler_RestoreRemovedCartModule_Params);
      this.restoreRemovedCartModule();
      return true;
    default:
      return false;
    }
  };

  CartHandlerStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kCartHandler_GetMerchantCarts_Name:
      var params = reader.decodeStruct(CartHandler_GetMerchantCarts_Params);
      this.getMerchantCarts().then(function(response) {
        var responseParams =
            new CartHandler_GetMerchantCarts_ResponseParams();
        responseParams.carts = response.carts;
        var builder = new codec.MessageV1Builder(
            kCartHandler_GetMerchantCarts_Name,
            codec.align(CartHandler_GetMerchantCarts_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(CartHandler_GetMerchantCarts_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kCartHandler_HideCart_Name:
      var params = reader.decodeStruct(CartHandler_HideCart_Params);
      this.hideCart(params.cartUrl).then(function(response) {
        var responseParams =
            new CartHandler_HideCart_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kCartHandler_HideCart_Name,
            codec.align(CartHandler_HideCart_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(CartHandler_HideCart_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kCartHandler_RestoreHiddenCart_Name:
      var params = reader.decodeStruct(CartHandler_RestoreHiddenCart_Params);
      this.restoreHiddenCart(params.cartUrl).then(function(response) {
        var responseParams =
            new CartHandler_RestoreHiddenCart_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kCartHandler_RestoreHiddenCart_Name,
            codec.align(CartHandler_RestoreHiddenCart_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(CartHandler_RestoreHiddenCart_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kCartHandler_RemoveCart_Name:
      var params = reader.decodeStruct(CartHandler_RemoveCart_Params);
      this.removeCart(params.cartUrl).then(function(response) {
        var responseParams =
            new CartHandler_RemoveCart_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kCartHandler_RemoveCart_Name,
            codec.align(CartHandler_RemoveCart_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(CartHandler_RemoveCart_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kCartHandler_RestoreRemovedCart_Name:
      var params = reader.decodeStruct(CartHandler_RestoreRemovedCart_Params);
      this.restoreRemovedCart(params.cartUrl).then(function(response) {
        var responseParams =
            new CartHandler_RestoreRemovedCart_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kCartHandler_RestoreRemovedCart_Name,
            codec.align(CartHandler_RestoreRemovedCart_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(CartHandler_RestoreRemovedCart_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kCartHandler_GetWarmWelcomeVisible_Name:
      var params = reader.decodeStruct(CartHandler_GetWarmWelcomeVisible_Params);
      this.getWarmWelcomeVisible().then(function(response) {
        var responseParams =
            new CartHandler_GetWarmWelcomeVisible_ResponseParams();
        responseParams.visible = response.visible;
        var builder = new codec.MessageV1Builder(
            kCartHandler_GetWarmWelcomeVisible_Name,
            codec.align(CartHandler_GetWarmWelcomeVisible_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(CartHandler_GetWarmWelcomeVisible_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateCartHandlerRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kCartHandler_GetMerchantCarts_Name:
        if (message.expectsResponse())
          paramsClass = CartHandler_GetMerchantCarts_Params;
      break;
      case kCartHandler_HideCartModule_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CartHandler_HideCartModule_Params;
      break;
      case kCartHandler_RestoreHiddenCartModule_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CartHandler_RestoreHiddenCartModule_Params;
      break;
      case kCartHandler_RemoveCartModule_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CartHandler_RemoveCartModule_Params;
      break;
      case kCartHandler_RestoreRemovedCartModule_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = CartHandler_RestoreRemovedCartModule_Params;
      break;
      case kCartHandler_HideCart_Name:
        if (message.expectsResponse())
          paramsClass = CartHandler_HideCart_Params;
      break;
      case kCartHandler_RestoreHiddenCart_Name:
        if (message.expectsResponse())
          paramsClass = CartHandler_RestoreHiddenCart_Params;
      break;
      case kCartHandler_RemoveCart_Name:
        if (message.expectsResponse())
          paramsClass = CartHandler_RemoveCart_Params;
      break;
      case kCartHandler_RestoreRemovedCart_Name:
        if (message.expectsResponse())
          paramsClass = CartHandler_RestoreRemovedCart_Params;
      break;
      case kCartHandler_GetWarmWelcomeVisible_Name:
        if (message.expectsResponse())
          paramsClass = CartHandler_GetWarmWelcomeVisible_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateCartHandlerResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kCartHandler_GetMerchantCarts_Name:
        if (message.isResponse())
          paramsClass = CartHandler_GetMerchantCarts_ResponseParams;
        break;
      case kCartHandler_HideCart_Name:
        if (message.isResponse())
          paramsClass = CartHandler_HideCart_ResponseParams;
        break;
      case kCartHandler_RestoreHiddenCart_Name:
        if (message.isResponse())
          paramsClass = CartHandler_RestoreHiddenCart_ResponseParams;
        break;
      case kCartHandler_RemoveCart_Name:
        if (message.isResponse())
          paramsClass = CartHandler_RemoveCart_ResponseParams;
        break;
      case kCartHandler_RestoreRemovedCart_Name:
        if (message.isResponse())
          paramsClass = CartHandler_RestoreRemovedCart_ResponseParams;
        break;
      case kCartHandler_GetWarmWelcomeVisible_Name:
        if (message.isResponse())
          paramsClass = CartHandler_GetWarmWelcomeVisible_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var CartHandler = {
    name: 'chrome_cart.mojom.CartHandler',
    kVersion: 0,
    ptrClass: CartHandlerPtr,
    proxyClass: CartHandlerProxy,
    stubClass: CartHandlerStub,
    validateRequest: validateCartHandlerRequest,
    validateResponse: validateCartHandlerResponse,
  };
  CartHandlerStub.prototype.validator = validateCartHandlerRequest;
  CartHandlerProxy.prototype.validator = validateCartHandlerResponse;
  exports.MerchantCart = MerchantCart;
  exports.CartHandler = CartHandler;
  exports.CartHandlerPtr = CartHandlerPtr;
  exports.CartHandlerAssociatedPtr = CartHandlerAssociatedPtr;
})();