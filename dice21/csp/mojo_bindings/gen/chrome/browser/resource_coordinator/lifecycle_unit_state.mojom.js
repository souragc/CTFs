// chrome/browser/resource_coordinator/lifecycle_unit_state.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/browser/resource_coordinator/lifecycle_unit_state.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('mojom');


  var LifecycleUnitState = {};
  LifecycleUnitState.ACTIVE = 0;
  LifecycleUnitState.THROTTLED = 1;
  LifecycleUnitState.FROZEN = 3;
  LifecycleUnitState.DISCARDED = 5;
  LifecycleUnitState.MIN_VALUE = 0,
  LifecycleUnitState.MAX_VALUE = 5,

  LifecycleUnitState.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 3:
    case 5:
      return true;
    }
    return false;
  };

  LifecycleUnitState.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var LifecycleUnitLoadingState = {};
  LifecycleUnitLoadingState.UNLOADED = 0;
  LifecycleUnitLoadingState.LOADING = 1;
  LifecycleUnitLoadingState.LOADED = 2;
  LifecycleUnitLoadingState.MIN_VALUE = 0,
  LifecycleUnitLoadingState.MAX_VALUE = 2,

  LifecycleUnitLoadingState.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    }
    return false;
  };

  LifecycleUnitLoadingState.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var LifecycleUnitStateChangeReason = {};
  LifecycleUnitStateChangeReason.BROWSER_INITIATED = 0;
  LifecycleUnitStateChangeReason.RENDERER_INITIATED = 1;
  LifecycleUnitStateChangeReason.SYSTEM_MEMORY_PRESSURE = 2;
  LifecycleUnitStateChangeReason.EXTENSION_INITIATED = 3;
  LifecycleUnitStateChangeReason.USER_INITIATED = 4;
  LifecycleUnitStateChangeReason.MIN_VALUE = 0,
  LifecycleUnitStateChangeReason.MAX_VALUE = 4,

  LifecycleUnitStateChangeReason.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    }
    return false;
  };

  LifecycleUnitStateChangeReason.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var LifecycleUnitDiscardReason = {};
  LifecycleUnitDiscardReason.EXTERNAL = 0;
  LifecycleUnitDiscardReason.URGENT = 1;
  LifecycleUnitDiscardReason.MIN_VALUE = 0,
  LifecycleUnitDiscardReason.MAX_VALUE = 1,

  LifecycleUnitDiscardReason.isKnownEnumValue = function(value) {
    switch (value) {
    case 0:
    case 1:
      return true;
    }
    return false;
  };

  LifecycleUnitDiscardReason.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.LifecycleUnitState = LifecycleUnitState;
  exports.LifecycleUnitLoadingState = LifecycleUnitLoadingState;
  exports.LifecycleUnitStateChangeReason = LifecycleUnitStateChangeReason;
  exports.LifecycleUnitDiscardReason = LifecycleUnitDiscardReason;
})();