// chrome/common/search/search.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'chrome/common/search/search.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('search.mojom');
  var omnibox$ =
      mojo.internal.exposeNamespace('search.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'chrome/common/search/omnibox.mojom', 'omnibox.mojom.js');
  }
  var string16$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/string16.mojom', '../../../mojo/public/mojom/base/string16.mojom.js');
  }
  var time$ =
      mojo.internal.exposeNamespace('mojoBase.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'mojo/public/mojom/base/time.mojom', '../../../mojo/public/mojom/base/time.mojom.js');
  }
  var url$ =
      mojo.internal.exposeNamespace('url.mojom');
  if (mojo.config.autoLoadMojomDeps) {
    mojo.internal.loadMojomIfNecessary(
        'url/mojom/url.mojom', '../../../url/mojom/url.mojom.js');
  }


  var NTPLoggingEventType = {};

  NTPLoggingEventType.isKnownEnumValue = function(value) {
    return false;
  };

  NTPLoggingEventType.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var NTPSuggestionsLoggingEventType = {};

  NTPSuggestionsLoggingEventType.isKnownEnumValue = function(value) {
    return false;
  };

  NTPSuggestionsLoggingEventType.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var OmniboxFocusState = {};

  OmniboxFocusState.isKnownEnumValue = function(value) {
    return false;
  };

  OmniboxFocusState.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };
  var OmniboxFocusChangeReason = {};

  OmniboxFocusChangeReason.isKnownEnumValue = function(value) {
    return false;
  };

  OmniboxFocusChangeReason.validate = function(enumValue) {
    var isExtensible = false;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  function NTPTileImpression(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NTPTileImpression.prototype.initDefaults_ = function() {
  };
  NTPTileImpression.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NTPTileImpression.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NTPTileImpression.encodedSize = codec.kStructHeaderSize + 0;

  NTPTileImpression.decode = function(decoder) {
    var packed;
    var val = new NTPTileImpression();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NTPTileImpression.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NTPTileImpression.encodedSize);
    encoder.writeUint32(0);
  };
  function InstantMostVisitedInfo(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  InstantMostVisitedInfo.prototype.initDefaults_ = function() {
  };
  InstantMostVisitedInfo.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  InstantMostVisitedInfo.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  InstantMostVisitedInfo.encodedSize = codec.kStructHeaderSize + 0;

  InstantMostVisitedInfo.decode = function(decoder) {
    var packed;
    var val = new InstantMostVisitedInfo();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  InstantMostVisitedInfo.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(InstantMostVisitedInfo.encodedSize);
    encoder.writeUint32(0);
  };
  function NtpTheme(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  NtpTheme.prototype.initDefaults_ = function() {
  };
  NtpTheme.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  NtpTheme.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  NtpTheme.encodedSize = codec.kStructHeaderSize + 0;

  NtpTheme.decode = function(decoder) {
    var packed;
    var val = new NtpTheme();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  NtpTheme.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(NtpTheme.encodedSize);
    encoder.writeUint32(0);
  };
  function SearchBoxTheme(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  SearchBoxTheme.prototype.initDefaults_ = function() {
  };
  SearchBoxTheme.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  SearchBoxTheme.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  SearchBoxTheme.encodedSize = codec.kStructHeaderSize + 0;

  SearchBoxTheme.decode = function(decoder) {
    var packed;
    var val = new SearchBoxTheme();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  SearchBoxTheme.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(SearchBoxTheme.encodedSize);
    encoder.writeUint32(0);
  };
  function EmbeddedSearchConnector_Connect_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchConnector_Connect_Params.prototype.initDefaults_ = function() {
    this.embeddedSearch = new associatedBindings.AssociatedInterfaceRequest();
    this.client = new associatedBindings.AssociatedInterfacePtrInfo();
  };
  EmbeddedSearchConnector_Connect_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchConnector_Connect_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchConnector_Connect_Params.embeddedSearch
    err = messageValidator.validateAssociatedInterfaceRequest(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchConnector_Connect_Params.client
    err = messageValidator.validateAssociatedInterface(offset + codec.kStructHeaderSize + 4, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchConnector_Connect_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearchConnector_Connect_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchConnector_Connect_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.embeddedSearch =
        decoder.decodeStruct(codec.AssociatedInterfaceRequest);
    val.client =
        decoder.decodeStruct(codec.AssociatedInterfacePtrInfo);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearchConnector_Connect_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchConnector_Connect_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.AssociatedInterfaceRequest, val.embeddedSearch);
    encoder.encodeStruct(codec.AssociatedInterfacePtrInfo, val.client);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_FocusOmnibox_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_FocusOmnibox_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.focus = false;
  };
  EmbeddedSearch_FocusOmnibox_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_FocusOmnibox_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  EmbeddedSearch_FocusOmnibox_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_FocusOmnibox_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_FocusOmnibox_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    packed = decoder.readUint8();
    val.focus = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_FocusOmnibox_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_FocusOmnibox_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    packed = 0;
    packed |= (val.focus & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_DeleteMostVisitedItem_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_DeleteMostVisitedItem_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.url = null;
  };
  EmbeddedSearch_DeleteMostVisitedItem_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_DeleteMostVisitedItem_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_DeleteMostVisitedItem_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_DeleteMostVisitedItem_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_DeleteMostVisitedItem_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_DeleteMostVisitedItem_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  EmbeddedSearch_DeleteMostVisitedItem_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_DeleteMostVisitedItem_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function EmbeddedSearch_UndoAllMostVisitedDeletions_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
  };
  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_UndoAllMostVisitedDeletions_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_UndoAllMostVisitedDeletions_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_UndoAllMostVisitedDeletions_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_UndoMostVisitedDeletion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_UndoMostVisitedDeletion_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.url = null;
  };
  EmbeddedSearch_UndoMostVisitedDeletion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_UndoMostVisitedDeletion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_UndoMostVisitedDeletion_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_UndoMostVisitedDeletion_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_UndoMostVisitedDeletion_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_UndoMostVisitedDeletion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  EmbeddedSearch_UndoMostVisitedDeletion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_UndoMostVisitedDeletion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function EmbeddedSearch_AddCustomLink_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_AddCustomLink_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.url = null;
    this.title = null;
  };
  EmbeddedSearch_AddCustomLink_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_AddCustomLink_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_AddCustomLink_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_AddCustomLink_Params.title
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_AddCustomLink_Params.encodedSize = codec.kStructHeaderSize + 24;

  EmbeddedSearch_AddCustomLink_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_AddCustomLink_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.title =
        decoder.decodeStruct(codec.String);
    return val;
  };

  EmbeddedSearch_AddCustomLink_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_AddCustomLink_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStruct(codec.String, val.title);
  };
  function EmbeddedSearch_AddCustomLink_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_AddCustomLink_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  EmbeddedSearch_AddCustomLink_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_AddCustomLink_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_AddCustomLink_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_AddCustomLink_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_AddCustomLink_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_AddCustomLink_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_AddCustomLink_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_UpdateCustomLink_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_UpdateCustomLink_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.url = null;
    this.newUrl = null;
    this.newTitle = null;
  };
  EmbeddedSearch_UpdateCustomLink_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_UpdateCustomLink_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_UpdateCustomLink_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_UpdateCustomLink_Params.newUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_UpdateCustomLink_Params.newTitle
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 24, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_UpdateCustomLink_Params.encodedSize = codec.kStructHeaderSize + 32;

  EmbeddedSearch_UpdateCustomLink_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_UpdateCustomLink_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.newUrl =
        decoder.decodeStructPointer(url$.Url);
    val.newTitle =
        decoder.decodeStruct(codec.String);
    return val;
  };

  EmbeddedSearch_UpdateCustomLink_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_UpdateCustomLink_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStructPointer(url$.Url, val.newUrl);
    encoder.encodeStruct(codec.String, val.newTitle);
  };
  function EmbeddedSearch_UpdateCustomLink_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_UpdateCustomLink_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  EmbeddedSearch_UpdateCustomLink_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_UpdateCustomLink_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_UpdateCustomLink_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_UpdateCustomLink_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_UpdateCustomLink_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_UpdateCustomLink_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_UpdateCustomLink_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_ReorderCustomLink_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_ReorderCustomLink_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.newPos = 0;
    this.url = null;
  };
  EmbeddedSearch_ReorderCustomLink_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_ReorderCustomLink_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_ReorderCustomLink_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_ReorderCustomLink_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_ReorderCustomLink_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_ReorderCustomLink_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    val.newPos =
        decoder.decodeStruct(codec.Int32);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  EmbeddedSearch_ReorderCustomLink_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_ReorderCustomLink_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.encodeStruct(codec.Int32, val.newPos);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function EmbeddedSearch_DeleteCustomLink_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_DeleteCustomLink_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.url = null;
  };
  EmbeddedSearch_DeleteCustomLink_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_DeleteCustomLink_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_DeleteCustomLink_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_DeleteCustomLink_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_DeleteCustomLink_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_DeleteCustomLink_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    return val;
  };

  EmbeddedSearch_DeleteCustomLink_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_DeleteCustomLink_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.url);
  };
  function EmbeddedSearch_DeleteCustomLink_ResponseParams(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_DeleteCustomLink_ResponseParams.prototype.initDefaults_ = function() {
    this.success = false;
  };
  EmbeddedSearch_DeleteCustomLink_ResponseParams.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_DeleteCustomLink_ResponseParams.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_DeleteCustomLink_ResponseParams.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_DeleteCustomLink_ResponseParams.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_DeleteCustomLink_ResponseParams();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.success = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_DeleteCustomLink_ResponseParams.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_DeleteCustomLink_ResponseParams.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.success & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_UndoCustomLinkAction_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_UndoCustomLinkAction_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
  };
  EmbeddedSearch_UndoCustomLinkAction_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_UndoCustomLinkAction_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_UndoCustomLinkAction_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_UndoCustomLinkAction_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_UndoCustomLinkAction_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_UndoCustomLinkAction_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_UndoCustomLinkAction_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_ResetCustomLinks_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_ResetCustomLinks_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
  };
  EmbeddedSearch_ResetCustomLinks_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_ResetCustomLinks_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_ResetCustomLinks_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_ResetCustomLinks_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_ResetCustomLinks_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_ResetCustomLinks_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_ResetCustomLinks_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
  };
  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_ToggleShortcutsVisibility_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_ToggleShortcutsVisibility_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.doNotify = false;
  };
  EmbeddedSearch_ToggleShortcutsVisibility_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_ToggleShortcutsVisibility_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  EmbeddedSearch_ToggleShortcutsVisibility_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_ToggleShortcutsVisibility_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_ToggleShortcutsVisibility_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    packed = decoder.readUint8();
    val.doNotify = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_ToggleShortcutsVisibility_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_ToggleShortcutsVisibility_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    packed = 0;
    packed |= (val.doNotify & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_LogEvent_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_LogEvent_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.event = 0;
    this.time = null;
  };
  EmbeddedSearch_LogEvent_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_LogEvent_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_LogEvent_Params.event
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, NTPLoggingEventType);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_LogEvent_Params.time
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, time$.TimeDelta, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_LogEvent_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_LogEvent_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_LogEvent_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    val.event =
        decoder.decodeStruct(codec.Int32);
    val.time =
        decoder.decodeStructPointer(time$.TimeDelta);
    return val;
  };

  EmbeddedSearch_LogEvent_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_LogEvent_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.encodeStruct(codec.Int32, val.event);
    encoder.encodeStructPointer(time$.TimeDelta, val.time);
  };
  function EmbeddedSearch_LogSuggestionEventWithValue_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_LogSuggestionEventWithValue_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.event = 0;
    this.data = 0;
    this.time = null;
  };
  EmbeddedSearch_LogSuggestionEventWithValue_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_LogSuggestionEventWithValue_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_LogSuggestionEventWithValue_Params.event
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, NTPSuggestionsLoggingEventType);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_LogSuggestionEventWithValue_Params.time
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 16, time$.TimeDelta, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_LogSuggestionEventWithValue_Params.encodedSize = codec.kStructHeaderSize + 24;

  EmbeddedSearch_LogSuggestionEventWithValue_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_LogSuggestionEventWithValue_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    val.event =
        decoder.decodeStruct(codec.Int32);
    val.data =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.time =
        decoder.decodeStructPointer(time$.TimeDelta);
    return val;
  };

  EmbeddedSearch_LogSuggestionEventWithValue_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_LogSuggestionEventWithValue_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.encodeStruct(codec.Int32, val.event);
    encoder.encodeStruct(codec.Int32, val.data);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(time$.TimeDelta, val.time);
  };
  function EmbeddedSearch_LogMostVisitedImpression_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_LogMostVisitedImpression_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.impression = null;
  };
  EmbeddedSearch_LogMostVisitedImpression_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_LogMostVisitedImpression_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_LogMostVisitedImpression_Params.impression
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, NTPTileImpression, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_LogMostVisitedImpression_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_LogMostVisitedImpression_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_LogMostVisitedImpression_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.impression =
        decoder.decodeStructPointer(NTPTileImpression);
    return val;
  };

  EmbeddedSearch_LogMostVisitedImpression_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_LogMostVisitedImpression_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(NTPTileImpression, val.impression);
  };
  function EmbeddedSearch_LogMostVisitedNavigation_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_LogMostVisitedNavigation_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.impression = null;
  };
  EmbeddedSearch_LogMostVisitedNavigation_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_LogMostVisitedNavigation_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_LogMostVisitedNavigation_Params.impression
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, NTPTileImpression, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_LogMostVisitedNavigation_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_LogMostVisitedNavigation_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_LogMostVisitedNavigation_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.impression =
        decoder.decodeStructPointer(NTPTileImpression);
    return val;
  };

  EmbeddedSearch_LogMostVisitedNavigation_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_LogMostVisitedNavigation_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(NTPTileImpression, val.impression);
  };
  function EmbeddedSearch_PasteAndOpenDropdown_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_PasteAndOpenDropdown_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
    this.textToBePasted = null;
  };
  EmbeddedSearch_PasteAndOpenDropdown_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_PasteAndOpenDropdown_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_PasteAndOpenDropdown_Params.textToBePasted
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_PasteAndOpenDropdown_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_PasteAndOpenDropdown_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_PasteAndOpenDropdown_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.textToBePasted =
        decoder.decodeStructPointer(string16$.String16);
    return val;
  };

  EmbeddedSearch_PasteAndOpenDropdown_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_PasteAndOpenDropdown_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(string16$.String16, val.textToBePasted);
  };
  function EmbeddedSearch_SetCustomBackgroundInfo_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_SetCustomBackgroundInfo_Params.prototype.initDefaults_ = function() {
    this.backgroundUrl = null;
    this.attributionLine1 = null;
    this.attributionLine2 = null;
    this.actionUrl = null;
    this.collectionId = null;
  };
  EmbeddedSearch_SetCustomBackgroundInfo_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_SetCustomBackgroundInfo_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 48}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_SetCustomBackgroundInfo_Params.backgroundUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_SetCustomBackgroundInfo_Params.attributionLine1
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_SetCustomBackgroundInfo_Params.attributionLine2
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_SetCustomBackgroundInfo_Params.actionUrl
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 24, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_SetCustomBackgroundInfo_Params.collectionId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 32, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_SetCustomBackgroundInfo_Params.encodedSize = codec.kStructHeaderSize + 40;

  EmbeddedSearch_SetCustomBackgroundInfo_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_SetCustomBackgroundInfo_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.backgroundUrl =
        decoder.decodeStructPointer(url$.Url);
    val.attributionLine1 =
        decoder.decodeStruct(codec.String);
    val.attributionLine2 =
        decoder.decodeStruct(codec.String);
    val.actionUrl =
        decoder.decodeStructPointer(url$.Url);
    val.collectionId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  EmbeddedSearch_SetCustomBackgroundInfo_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_SetCustomBackgroundInfo_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(url$.Url, val.backgroundUrl);
    encoder.encodeStruct(codec.String, val.attributionLine1);
    encoder.encodeStruct(codec.String, val.attributionLine2);
    encoder.encodeStructPointer(url$.Url, val.actionUrl);
    encoder.encodeStruct(codec.String, val.collectionId);
  };
  function EmbeddedSearch_SelectLocalBackgroundImage_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_SelectLocalBackgroundImage_Params.prototype.initDefaults_ = function() {
  };
  EmbeddedSearch_SelectLocalBackgroundImage_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_SelectLocalBackgroundImage_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_SelectLocalBackgroundImage_Params.encodedSize = codec.kStructHeaderSize + 0;

  EmbeddedSearch_SelectLocalBackgroundImage_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_SelectLocalBackgroundImage_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  EmbeddedSearch_SelectLocalBackgroundImage_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_SelectLocalBackgroundImage_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function EmbeddedSearch_BlocklistSearchSuggestion_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_BlocklistSearchSuggestion_Params.prototype.initDefaults_ = function() {
    this.taskVersion = 0;
    this.taskId = 0;
  };
  EmbeddedSearch_BlocklistSearchSuggestion_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_BlocklistSearchSuggestion_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    return validator.validationError.NONE;
  };

  EmbeddedSearch_BlocklistSearchSuggestion_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_BlocklistSearchSuggestion_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_BlocklistSearchSuggestion_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.taskVersion =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.taskId =
        decoder.decodeStruct(codec.Int64);
    return val;
  };

  EmbeddedSearch_BlocklistSearchSuggestion_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_BlocklistSearchSuggestion_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.taskVersion);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int64, val.taskId);
  };
  function EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.prototype.initDefaults_ = function() {
    this.taskVersion = 0;
    this.taskId = 0;
    this.hash = null;
  };
  EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    // validate EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.hash
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 16, 1, codec.Uint8, false, [4], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.encodedSize = codec.kStructHeaderSize + 24;

  EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.taskVersion =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.taskId =
        decoder.decodeStruct(codec.Int64);
    val.hash =
        decoder.decodeArrayPointer(codec.Uint8);
    return val;
  };

  EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.taskVersion);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int64, val.taskId);
    encoder.encodeArrayPointer(codec.Uint8, val.hash);
  };
  function EmbeddedSearch_SearchSuggestionSelected_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_SearchSuggestionSelected_Params.prototype.initDefaults_ = function() {
    this.taskVersion = 0;
    this.taskId = 0;
    this.hash = null;
  };
  EmbeddedSearch_SearchSuggestionSelected_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_SearchSuggestionSelected_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;




    // validate EmbeddedSearch_SearchSuggestionSelected_Params.hash
    err = messageValidator.validateArrayPointer(offset + codec.kStructHeaderSize + 16, 1, codec.Uint8, false, [4], 0);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_SearchSuggestionSelected_Params.encodedSize = codec.kStructHeaderSize + 24;

  EmbeddedSearch_SearchSuggestionSelected_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_SearchSuggestionSelected_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.taskVersion =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.taskId =
        decoder.decodeStruct(codec.Int64);
    val.hash =
        decoder.decodeArrayPointer(codec.Uint8);
    return val;
  };

  EmbeddedSearch_SearchSuggestionSelected_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_SearchSuggestionSelected_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.taskVersion);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.Int64, val.taskId);
    encoder.encodeArrayPointer(codec.Uint8, val.hash);
  };
  function EmbeddedSearch_OptOutOfSearchSuggestions_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_OptOutOfSearchSuggestions_Params.prototype.initDefaults_ = function() {
  };
  EmbeddedSearch_OptOutOfSearchSuggestions_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_OptOutOfSearchSuggestions_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_OptOutOfSearchSuggestions_Params.encodedSize = codec.kStructHeaderSize + 0;

  EmbeddedSearch_OptOutOfSearchSuggestions_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_OptOutOfSearchSuggestions_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  EmbeddedSearch_OptOutOfSearchSuggestions_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_OptOutOfSearchSuggestions_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function EmbeddedSearch_ApplyDefaultTheme_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_ApplyDefaultTheme_Params.prototype.initDefaults_ = function() {
  };
  EmbeddedSearch_ApplyDefaultTheme_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_ApplyDefaultTheme_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_ApplyDefaultTheme_Params.encodedSize = codec.kStructHeaderSize + 0;

  EmbeddedSearch_ApplyDefaultTheme_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_ApplyDefaultTheme_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  EmbeddedSearch_ApplyDefaultTheme_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_ApplyDefaultTheme_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function EmbeddedSearch_ApplyAutogeneratedTheme_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_ApplyAutogeneratedTheme_Params.prototype.initDefaults_ = function() {
    this.color = 0;
  };
  EmbeddedSearch_ApplyAutogeneratedTheme_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_ApplyAutogeneratedTheme_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_ApplyAutogeneratedTheme_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_ApplyAutogeneratedTheme_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_ApplyAutogeneratedTheme_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.color =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_ApplyAutogeneratedTheme_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_ApplyAutogeneratedTheme_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.color);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_RevertThemeChanges_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_RevertThemeChanges_Params.prototype.initDefaults_ = function() {
  };
  EmbeddedSearch_RevertThemeChanges_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_RevertThemeChanges_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_RevertThemeChanges_Params.encodedSize = codec.kStructHeaderSize + 0;

  EmbeddedSearch_RevertThemeChanges_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_RevertThemeChanges_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  EmbeddedSearch_RevertThemeChanges_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_RevertThemeChanges_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function EmbeddedSearch_ConfirmThemeChanges_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_ConfirmThemeChanges_Params.prototype.initDefaults_ = function() {
  };
  EmbeddedSearch_ConfirmThemeChanges_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_ConfirmThemeChanges_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_ConfirmThemeChanges_Params.encodedSize = codec.kStructHeaderSize + 0;

  EmbeddedSearch_ConfirmThemeChanges_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_ConfirmThemeChanges_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  EmbeddedSearch_ConfirmThemeChanges_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_ConfirmThemeChanges_Params.encodedSize);
    encoder.writeUint32(0);
  };
  function EmbeddedSearch_QueryAutocomplete_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_QueryAutocomplete_Params.prototype.initDefaults_ = function() {
    this.input = null;
    this.preventInlineAutocomplete = false;
  };
  EmbeddedSearch_QueryAutocomplete_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_QueryAutocomplete_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_QueryAutocomplete_Params.input
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, string16$.String16, false);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_QueryAutocomplete_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_QueryAutocomplete_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_QueryAutocomplete_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.input =
        decoder.decodeStructPointer(string16$.String16);
    packed = decoder.readUint8();
    val.preventInlineAutocomplete = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_QueryAutocomplete_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_QueryAutocomplete_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(string16$.String16, val.input);
    packed = 0;
    packed |= (val.preventInlineAutocomplete & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_DeleteAutocompleteMatch_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_DeleteAutocompleteMatch_Params.prototype.initDefaults_ = function() {
    this.line = 0;
  };
  EmbeddedSearch_DeleteAutocompleteMatch_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_DeleteAutocompleteMatch_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_DeleteAutocompleteMatch_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_DeleteAutocompleteMatch_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_DeleteAutocompleteMatch_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.line =
        decoder.decodeStruct(codec.Uint8);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_DeleteAutocompleteMatch_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_DeleteAutocompleteMatch_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint8, val.line);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_StopAutocomplete_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_StopAutocomplete_Params.prototype.initDefaults_ = function() {
    this.clearResult = false;
  };
  EmbeddedSearch_StopAutocomplete_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_StopAutocomplete_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_StopAutocomplete_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_StopAutocomplete_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_StopAutocomplete_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.clearResult = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_StopAutocomplete_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_StopAutocomplete_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.clearResult & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_LogCharTypedToRepaintLatency_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_LogCharTypedToRepaintLatency_Params.prototype.initDefaults_ = function() {
    this.latencyMs = 0;
  };
  EmbeddedSearch_LogCharTypedToRepaintLatency_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_LogCharTypedToRepaintLatency_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_LogCharTypedToRepaintLatency_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_LogCharTypedToRepaintLatency_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_LogCharTypedToRepaintLatency_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.latencyMs =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_LogCharTypedToRepaintLatency_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_LogCharTypedToRepaintLatency_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.latencyMs);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_BlocklistPromo_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_BlocklistPromo_Params.prototype.initDefaults_ = function() {
    this.promoId = null;
  };
  EmbeddedSearch_BlocklistPromo_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_BlocklistPromo_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearch_BlocklistPromo_Params.promoId
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 0, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearch_BlocklistPromo_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_BlocklistPromo_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_BlocklistPromo_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.promoId =
        decoder.decodeStruct(codec.String);
    return val;
  };

  EmbeddedSearch_BlocklistPromo_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_BlocklistPromo_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.String, val.promoId);
  };
  function EmbeddedSearch_OpenExtensionsPage_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_OpenExtensionsPage_Params.prototype.initDefaults_ = function() {
    this.button = 0;
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
  };
  EmbeddedSearch_OpenExtensionsPage_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_OpenExtensionsPage_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 24}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;






    return validator.validationError.NONE;
  };

  EmbeddedSearch_OpenExtensionsPage_Params.encodedSize = codec.kStructHeaderSize + 16;

  EmbeddedSearch_OpenExtensionsPage_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_OpenExtensionsPage_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.button =
        decoder.decodeStruct(codec.Double);
    packed = decoder.readUint8();
    val.altKey = (packed >> 0) & 1 ? true : false;
    val.ctrlKey = (packed >> 1) & 1 ? true : false;
    val.metaKey = (packed >> 2) & 1 ? true : false;
    val.shiftKey = (packed >> 3) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_OpenExtensionsPage_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_OpenExtensionsPage_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Double, val.button);
    packed = 0;
    packed |= (val.altKey & 1) << 0
    packed |= (val.ctrlKey & 1) << 1
    packed |= (val.metaKey & 1) << 2
    packed |= (val.shiftKey & 1) << 3
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearch_OpenAutocompleteMatch_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_OpenAutocompleteMatch_Params.prototype.initDefaults_ = function() {
    this.line = 0;
    this.areMatchesShowing = false;
    this.altKey = false;
    this.ctrlKey = false;
    this.metaKey = false;
    this.shiftKey = false;
    this.url = null;
    this.timeElapsedSinceLastFocus = 0;
    this.button = 0;
  };
  EmbeddedSearch_OpenAutocompleteMatch_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_OpenAutocompleteMatch_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 40}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearch_OpenAutocompleteMatch_Params.url
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 8, url$.Url, false);
    if (err !== validator.validationError.NONE)
        return err;








    return validator.validationError.NONE;
  };

  EmbeddedSearch_OpenAutocompleteMatch_Params.encodedSize = codec.kStructHeaderSize + 32;

  EmbeddedSearch_OpenAutocompleteMatch_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_OpenAutocompleteMatch_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.line =
        decoder.decodeStruct(codec.Uint8);
    packed = decoder.readUint8();
    val.areMatchesShowing = (packed >> 0) & 1 ? true : false;
    val.altKey = (packed >> 1) & 1 ? true : false;
    val.ctrlKey = (packed >> 2) & 1 ? true : false;
    val.metaKey = (packed >> 3) & 1 ? true : false;
    val.shiftKey = (packed >> 4) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStructPointer(url$.Url);
    val.timeElapsedSinceLastFocus =
        decoder.decodeStruct(codec.Double);
    val.button =
        decoder.decodeStruct(codec.Double);
    return val;
  };

  EmbeddedSearch_OpenAutocompleteMatch_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_OpenAutocompleteMatch_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint8, val.line);
    packed = 0;
    packed |= (val.areMatchesShowing & 1) << 0
    packed |= (val.altKey & 1) << 1
    packed |= (val.ctrlKey & 1) << 2
    packed |= (val.metaKey & 1) << 3
    packed |= (val.shiftKey & 1) << 4
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStructPointer(url$.Url, val.url);
    encoder.encodeStruct(codec.Double, val.timeElapsedSinceLastFocus);
    encoder.encodeStruct(codec.Double, val.button);
  };
  function EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params.prototype.initDefaults_ = function() {
    this.suggestionGroupId = 0;
  };
  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.suggestionGroupId =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.suggestionGroupId);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearchClient_AutocompleteResultChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_AutocompleteResultChanged_Params.prototype.initDefaults_ = function() {
    this.result = null;
  };
  EmbeddedSearchClient_AutocompleteResultChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_AutocompleteResultChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_AutocompleteResultChanged_Params.result
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, omnibox$.AutocompleteResult, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_AutocompleteResultChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_AutocompleteResultChanged_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_AutocompleteResultChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.result =
        decoder.decodeStructPointer(omnibox$.AutocompleteResult);
    return val;
  };

  EmbeddedSearchClient_AutocompleteResultChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_AutocompleteResultChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(omnibox$.AutocompleteResult, val.result);
  };
  function EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.prototype.initDefaults_ = function() {
    this.matchIndex = 0;
    this.url = null;
    this.dataUrl = null;
  };
  EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 32}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;



    // validate EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.url
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 8, false)
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.dataUrl
    err = messageValidator.validateStringPointer(offset + codec.kStructHeaderSize + 16, false)
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.encodedSize = codec.kStructHeaderSize + 24;

  EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.matchIndex =
        decoder.decodeStruct(codec.Uint32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    val.url =
        decoder.decodeStruct(codec.String);
    val.dataUrl =
        decoder.decodeStruct(codec.String);
    return val;
  };

  EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Uint32, val.matchIndex);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.encodeStruct(codec.String, val.url);
    encoder.encodeStruct(codec.String, val.dataUrl);
  };
  function EmbeddedSearchClient_SetPageSequenceNumber_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_SetPageSequenceNumber_Params.prototype.initDefaults_ = function() {
    this.pageSeqNo = 0;
  };
  EmbeddedSearchClient_SetPageSequenceNumber_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_SetPageSequenceNumber_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_SetPageSequenceNumber_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_SetPageSequenceNumber_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_SetPageSequenceNumber_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.pageSeqNo =
        decoder.decodeStruct(codec.Int32);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearchClient_SetPageSequenceNumber_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_SetPageSequenceNumber_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.pageSeqNo);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearchClient_FocusChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_FocusChanged_Params.prototype.initDefaults_ = function() {
    this.newFocusState = 0;
    this.reason = 0;
  };
  EmbeddedSearchClient_FocusChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_FocusChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_FocusChanged_Params.newFocusState
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 0, OmniboxFocusState);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_FocusChanged_Params.reason
    err = messageValidator.validateEnum(offset + codec.kStructHeaderSize + 4, OmniboxFocusChangeReason);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_FocusChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_FocusChanged_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_FocusChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.newFocusState =
        decoder.decodeStruct(codec.Int32);
    val.reason =
        decoder.decodeStruct(codec.Int32);
    return val;
  };

  EmbeddedSearchClient_FocusChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_FocusChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStruct(codec.Int32, val.newFocusState);
    encoder.encodeStruct(codec.Int32, val.reason);
  };
  function EmbeddedSearchClient_MostVisitedInfoChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_MostVisitedInfoChanged_Params.prototype.initDefaults_ = function() {
    this.mostVisitedInfo = null;
  };
  EmbeddedSearchClient_MostVisitedInfoChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_MostVisitedInfoChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_MostVisitedInfoChanged_Params.mostVisitedInfo
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, InstantMostVisitedInfo, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_MostVisitedInfoChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_MostVisitedInfoChanged_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_MostVisitedInfoChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.mostVisitedInfo =
        decoder.decodeStructPointer(InstantMostVisitedInfo);
    return val;
  };

  EmbeddedSearchClient_MostVisitedInfoChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_MostVisitedInfoChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(InstantMostVisitedInfo, val.mostVisitedInfo);
  };
  function EmbeddedSearchClient_SetInputInProgress_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_SetInputInProgress_Params.prototype.initDefaults_ = function() {
    this.inputInProgress = false;
  };
  EmbeddedSearchClient_SetInputInProgress_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_SetInputInProgress_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_SetInputInProgress_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_SetInputInProgress_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_SetInputInProgress_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    packed = decoder.readUint8();
    val.inputInProgress = (packed >> 0) & 1 ? true : false;
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    decoder.skip(1);
    return val;
  };

  EmbeddedSearchClient_SetInputInProgress_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_SetInputInProgress_Params.encodedSize);
    encoder.writeUint32(0);
    packed = 0;
    packed |= (val.inputInProgress & 1) << 0
    encoder.writeUint8(packed);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
    encoder.skip(1);
  };
  function EmbeddedSearchClient_ThemeChanged_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_ThemeChanged_Params.prototype.initDefaults_ = function() {
    this.theme = null;
  };
  EmbeddedSearchClient_ThemeChanged_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_ThemeChanged_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 16}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;


    // validate EmbeddedSearchClient_ThemeChanged_Params.theme
    err = messageValidator.validateStructPointer(offset + codec.kStructHeaderSize + 0, NtpTheme, false);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_ThemeChanged_Params.encodedSize = codec.kStructHeaderSize + 8;

  EmbeddedSearchClient_ThemeChanged_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_ThemeChanged_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    val.theme =
        decoder.decodeStructPointer(NtpTheme);
    return val;
  };

  EmbeddedSearchClient_ThemeChanged_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_ThemeChanged_Params.encodedSize);
    encoder.writeUint32(0);
    encoder.encodeStructPointer(NtpTheme, val.theme);
  };
  function EmbeddedSearchClient_LocalBackgroundSelected_Params(values) {
    this.initDefaults_();
    this.initFields_(values);
  }


  EmbeddedSearchClient_LocalBackgroundSelected_Params.prototype.initDefaults_ = function() {
  };
  EmbeddedSearchClient_LocalBackgroundSelected_Params.prototype.initFields_ = function(fields) {
    for(var field in fields) {
        if (this.hasOwnProperty(field))
          this[field] = fields[field];
    }
  };

  EmbeddedSearchClient_LocalBackgroundSelected_Params.validate = function(messageValidator, offset) {
    var err;
    err = messageValidator.validateStructHeader(offset, codec.kStructHeaderSize);
    if (err !== validator.validationError.NONE)
        return err;

    var kVersionSizes = [
      {version: 0, numBytes: 8}
    ];
    err = messageValidator.validateStructVersion(offset, kVersionSizes);
    if (err !== validator.validationError.NONE)
        return err;

    return validator.validationError.NONE;
  };

  EmbeddedSearchClient_LocalBackgroundSelected_Params.encodedSize = codec.kStructHeaderSize + 0;

  EmbeddedSearchClient_LocalBackgroundSelected_Params.decode = function(decoder) {
    var packed;
    var val = new EmbeddedSearchClient_LocalBackgroundSelected_Params();
    var numberOfBytes = decoder.readUint32();
    var version = decoder.readUint32();
    return val;
  };

  EmbeddedSearchClient_LocalBackgroundSelected_Params.encode = function(encoder, val) {
    var packed;
    encoder.writeUint32(EmbeddedSearchClient_LocalBackgroundSelected_Params.encodedSize);
    encoder.writeUint32(0);
  };
  var kEmbeddedSearchConnector_Connect_Name = 205930626;

  function EmbeddedSearchConnectorPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(EmbeddedSearchConnector,
                                                   handleOrPtrInfo);
  }

  function EmbeddedSearchConnectorAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        EmbeddedSearchConnector, associatedInterfacePtrInfo);
  }

  EmbeddedSearchConnectorAssociatedPtr.prototype =
      Object.create(EmbeddedSearchConnectorPtr.prototype);
  EmbeddedSearchConnectorAssociatedPtr.prototype.constructor =
      EmbeddedSearchConnectorAssociatedPtr;

  function EmbeddedSearchConnectorProxy(receiver) {
    this.receiver_ = receiver;
  }
  EmbeddedSearchConnectorPtr.prototype.connect = function() {
    return EmbeddedSearchConnectorProxy.prototype.connect
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchConnectorProxy.prototype.connect = function(embeddedSearch, client) {
    var params_ = new EmbeddedSearchConnector_Connect_Params();
    params_.embeddedSearch = embeddedSearch;
    params_.client = client;
    var builder = new codec.MessageV2Builder(
        kEmbeddedSearchConnector_Connect_Name,
        codec.align(EmbeddedSearchConnector_Connect_Params.encodedSize));
    builder.setPayload(EmbeddedSearchConnector_Connect_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function EmbeddedSearchConnectorStub(delegate) {
    this.delegate_ = delegate;
  }
  EmbeddedSearchConnectorStub.prototype.connect = function(embeddedSearch, client) {
    return this.delegate_ && this.delegate_.connect && this.delegate_.connect(embeddedSearch, client);
  }

  EmbeddedSearchConnectorStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kEmbeddedSearchConnector_Connect_Name:
      var params = reader.decodeStruct(EmbeddedSearchConnector_Connect_Params);
      this.connect(params.embeddedSearch, params.client);
      return true;
    default:
      return false;
    }
  };

  EmbeddedSearchConnectorStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateEmbeddedSearchConnectorRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kEmbeddedSearchConnector_Connect_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchConnector_Connect_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateEmbeddedSearchConnectorResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var EmbeddedSearchConnector = {
    name: 'search.mojom.EmbeddedSearchConnector',
    kVersion: 0,
    ptrClass: EmbeddedSearchConnectorPtr,
    proxyClass: EmbeddedSearchConnectorProxy,
    stubClass: EmbeddedSearchConnectorStub,
    validateRequest: validateEmbeddedSearchConnectorRequest,
    validateResponse: null,
  };
  EmbeddedSearchConnectorStub.prototype.validator = validateEmbeddedSearchConnectorRequest;
  EmbeddedSearchConnectorProxy.prototype.validator = null;
  var kEmbeddedSearch_FocusOmnibox_Name = 1646208023;
  var kEmbeddedSearch_DeleteMostVisitedItem_Name = 1372302277;
  var kEmbeddedSearch_UndoAllMostVisitedDeletions_Name = 1240597628;
  var kEmbeddedSearch_UndoMostVisitedDeletion_Name = 436510066;
  var kEmbeddedSearch_AddCustomLink_Name = 614059211;
  var kEmbeddedSearch_UpdateCustomLink_Name = 997598700;
  var kEmbeddedSearch_ReorderCustomLink_Name = 1819379717;
  var kEmbeddedSearch_DeleteCustomLink_Name = 587550433;
  var kEmbeddedSearch_UndoCustomLinkAction_Name = 1319724822;
  var kEmbeddedSearch_ResetCustomLinks_Name = 524694720;
  var kEmbeddedSearch_ToggleMostVisitedOrCustomLinks_Name = 1817039592;
  var kEmbeddedSearch_ToggleShortcutsVisibility_Name = 266941478;
  var kEmbeddedSearch_LogEvent_Name = 134400736;
  var kEmbeddedSearch_LogSuggestionEventWithValue_Name = 828290552;
  var kEmbeddedSearch_LogMostVisitedImpression_Name = 2060728264;
  var kEmbeddedSearch_LogMostVisitedNavigation_Name = 1096010837;
  var kEmbeddedSearch_PasteAndOpenDropdown_Name = 1202729796;
  var kEmbeddedSearch_SetCustomBackgroundInfo_Name = 755506243;
  var kEmbeddedSearch_SelectLocalBackgroundImage_Name = 1627233229;
  var kEmbeddedSearch_BlocklistSearchSuggestion_Name = 535789052;
  var kEmbeddedSearch_BlocklistSearchSuggestionWithHash_Name = 725731424;
  var kEmbeddedSearch_SearchSuggestionSelected_Name = 1901787425;
  var kEmbeddedSearch_OptOutOfSearchSuggestions_Name = 601504020;
  var kEmbeddedSearch_ApplyDefaultTheme_Name = 669609205;
  var kEmbeddedSearch_ApplyAutogeneratedTheme_Name = 278950108;
  var kEmbeddedSearch_RevertThemeChanges_Name = 1821362449;
  var kEmbeddedSearch_ConfirmThemeChanges_Name = 1144910936;
  var kEmbeddedSearch_QueryAutocomplete_Name = 276261987;
  var kEmbeddedSearch_DeleteAutocompleteMatch_Name = 457083826;
  var kEmbeddedSearch_StopAutocomplete_Name = 1498634536;
  var kEmbeddedSearch_LogCharTypedToRepaintLatency_Name = 1047849776;
  var kEmbeddedSearch_BlocklistPromo_Name = 495862939;
  var kEmbeddedSearch_OpenExtensionsPage_Name = 1635380343;
  var kEmbeddedSearch_OpenAutocompleteMatch_Name = 1629364822;
  var kEmbeddedSearch_ToggleSuggestionGroupIdVisibility_Name = 733443991;

  function EmbeddedSearchPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(EmbeddedSearch,
                                                   handleOrPtrInfo);
  }

  function EmbeddedSearchAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        EmbeddedSearch, associatedInterfacePtrInfo);
  }

  EmbeddedSearchAssociatedPtr.prototype =
      Object.create(EmbeddedSearchPtr.prototype);
  EmbeddedSearchAssociatedPtr.prototype.constructor =
      EmbeddedSearchAssociatedPtr;

  function EmbeddedSearchProxy(receiver) {
    this.receiver_ = receiver;
  }
  EmbeddedSearchPtr.prototype.focusOmnibox = function() {
    return EmbeddedSearchProxy.prototype.focusOmnibox
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.focusOmnibox = function(pageSeqNo, focus) {
    var params_ = new EmbeddedSearch_FocusOmnibox_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.focus = focus;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_FocusOmnibox_Name,
        codec.align(EmbeddedSearch_FocusOmnibox_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_FocusOmnibox_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.deleteMostVisitedItem = function() {
    return EmbeddedSearchProxy.prototype.deleteMostVisitedItem
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.deleteMostVisitedItem = function(pageSeqNo, url) {
    var params_ = new EmbeddedSearch_DeleteMostVisitedItem_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.url = url;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_DeleteMostVisitedItem_Name,
        codec.align(EmbeddedSearch_DeleteMostVisitedItem_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_DeleteMostVisitedItem_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.undoAllMostVisitedDeletions = function() {
    return EmbeddedSearchProxy.prototype.undoAllMostVisitedDeletions
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.undoAllMostVisitedDeletions = function(pageSeqNo) {
    var params_ = new EmbeddedSearch_UndoAllMostVisitedDeletions_Params();
    params_.pageSeqNo = pageSeqNo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_UndoAllMostVisitedDeletions_Name,
        codec.align(EmbeddedSearch_UndoAllMostVisitedDeletions_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_UndoAllMostVisitedDeletions_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.undoMostVisitedDeletion = function() {
    return EmbeddedSearchProxy.prototype.undoMostVisitedDeletion
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.undoMostVisitedDeletion = function(pageSeqNo, url) {
    var params_ = new EmbeddedSearch_UndoMostVisitedDeletion_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.url = url;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_UndoMostVisitedDeletion_Name,
        codec.align(EmbeddedSearch_UndoMostVisitedDeletion_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_UndoMostVisitedDeletion_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.addCustomLink = function() {
    return EmbeddedSearchProxy.prototype.addCustomLink
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.addCustomLink = function(pageSeqNo, url, title) {
    var params_ = new EmbeddedSearch_AddCustomLink_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.url = url;
    params_.title = title;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kEmbeddedSearch_AddCustomLink_Name,
          codec.align(EmbeddedSearch_AddCustomLink_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(EmbeddedSearch_AddCustomLink_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(EmbeddedSearch_AddCustomLink_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  EmbeddedSearchPtr.prototype.updateCustomLink = function() {
    return EmbeddedSearchProxy.prototype.updateCustomLink
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.updateCustomLink = function(pageSeqNo, url, newUrl, newTitle) {
    var params_ = new EmbeddedSearch_UpdateCustomLink_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.url = url;
    params_.newUrl = newUrl;
    params_.newTitle = newTitle;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kEmbeddedSearch_UpdateCustomLink_Name,
          codec.align(EmbeddedSearch_UpdateCustomLink_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(EmbeddedSearch_UpdateCustomLink_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(EmbeddedSearch_UpdateCustomLink_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  EmbeddedSearchPtr.prototype.reorderCustomLink = function() {
    return EmbeddedSearchProxy.prototype.reorderCustomLink
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.reorderCustomLink = function(pageSeqNo, url, newPos) {
    var params_ = new EmbeddedSearch_ReorderCustomLink_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.url = url;
    params_.newPos = newPos;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_ReorderCustomLink_Name,
        codec.align(EmbeddedSearch_ReorderCustomLink_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_ReorderCustomLink_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.deleteCustomLink = function() {
    return EmbeddedSearchProxy.prototype.deleteCustomLink
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.deleteCustomLink = function(pageSeqNo, url) {
    var params_ = new EmbeddedSearch_DeleteCustomLink_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.url = url;
    return new Promise(function(resolve, reject) {
      var builder = new codec.MessageV1Builder(
          kEmbeddedSearch_DeleteCustomLink_Name,
          codec.align(EmbeddedSearch_DeleteCustomLink_Params.encodedSize),
          codec.kMessageExpectsResponse, 0);
      builder.encodeStruct(EmbeddedSearch_DeleteCustomLink_Params, params_);
      var message = builder.finish();
      this.receiver_.acceptAndExpectResponse(message).then(function(message) {
        var reader = new codec.MessageReader(message);
        var responseParams =
            reader.decodeStruct(EmbeddedSearch_DeleteCustomLink_ResponseParams);
        resolve(responseParams);
      }).catch(function(result) {
        reject(Error("Connection error: " + result));
      });
    }.bind(this));
  };
  EmbeddedSearchPtr.prototype.undoCustomLinkAction = function() {
    return EmbeddedSearchProxy.prototype.undoCustomLinkAction
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.undoCustomLinkAction = function(pageSeqNo) {
    var params_ = new EmbeddedSearch_UndoCustomLinkAction_Params();
    params_.pageSeqNo = pageSeqNo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_UndoCustomLinkAction_Name,
        codec.align(EmbeddedSearch_UndoCustomLinkAction_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_UndoCustomLinkAction_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.resetCustomLinks = function() {
    return EmbeddedSearchProxy.prototype.resetCustomLinks
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.resetCustomLinks = function(pageSeqNo) {
    var params_ = new EmbeddedSearch_ResetCustomLinks_Params();
    params_.pageSeqNo = pageSeqNo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_ResetCustomLinks_Name,
        codec.align(EmbeddedSearch_ResetCustomLinks_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_ResetCustomLinks_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.toggleMostVisitedOrCustomLinks = function() {
    return EmbeddedSearchProxy.prototype.toggleMostVisitedOrCustomLinks
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.toggleMostVisitedOrCustomLinks = function(pageSeqNo) {
    var params_ = new EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params();
    params_.pageSeqNo = pageSeqNo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_ToggleMostVisitedOrCustomLinks_Name,
        codec.align(EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.toggleShortcutsVisibility = function() {
    return EmbeddedSearchProxy.prototype.toggleShortcutsVisibility
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.toggleShortcutsVisibility = function(pageSeqNo, doNotify) {
    var params_ = new EmbeddedSearch_ToggleShortcutsVisibility_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.doNotify = doNotify;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_ToggleShortcutsVisibility_Name,
        codec.align(EmbeddedSearch_ToggleShortcutsVisibility_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_ToggleShortcutsVisibility_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.logEvent = function() {
    return EmbeddedSearchProxy.prototype.logEvent
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.logEvent = function(pageSeqNo, event, time) {
    var params_ = new EmbeddedSearch_LogEvent_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.event = event;
    params_.time = time;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_LogEvent_Name,
        codec.align(EmbeddedSearch_LogEvent_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_LogEvent_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.logSuggestionEventWithValue = function() {
    return EmbeddedSearchProxy.prototype.logSuggestionEventWithValue
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.logSuggestionEventWithValue = function(pageSeqNo, event, data, time) {
    var params_ = new EmbeddedSearch_LogSuggestionEventWithValue_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.event = event;
    params_.data = data;
    params_.time = time;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_LogSuggestionEventWithValue_Name,
        codec.align(EmbeddedSearch_LogSuggestionEventWithValue_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_LogSuggestionEventWithValue_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.logMostVisitedImpression = function() {
    return EmbeddedSearchProxy.prototype.logMostVisitedImpression
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.logMostVisitedImpression = function(pageSeqNo, impression) {
    var params_ = new EmbeddedSearch_LogMostVisitedImpression_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.impression = impression;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_LogMostVisitedImpression_Name,
        codec.align(EmbeddedSearch_LogMostVisitedImpression_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_LogMostVisitedImpression_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.logMostVisitedNavigation = function() {
    return EmbeddedSearchProxy.prototype.logMostVisitedNavigation
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.logMostVisitedNavigation = function(pageSeqNo, impression) {
    var params_ = new EmbeddedSearch_LogMostVisitedNavigation_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.impression = impression;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_LogMostVisitedNavigation_Name,
        codec.align(EmbeddedSearch_LogMostVisitedNavigation_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_LogMostVisitedNavigation_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.pasteAndOpenDropdown = function() {
    return EmbeddedSearchProxy.prototype.pasteAndOpenDropdown
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.pasteAndOpenDropdown = function(pageSeqNo, textToBePasted) {
    var params_ = new EmbeddedSearch_PasteAndOpenDropdown_Params();
    params_.pageSeqNo = pageSeqNo;
    params_.textToBePasted = textToBePasted;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_PasteAndOpenDropdown_Name,
        codec.align(EmbeddedSearch_PasteAndOpenDropdown_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_PasteAndOpenDropdown_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.setCustomBackgroundInfo = function() {
    return EmbeddedSearchProxy.prototype.setCustomBackgroundInfo
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.setCustomBackgroundInfo = function(backgroundUrl, attributionLine1, attributionLine2, actionUrl, collectionId) {
    var params_ = new EmbeddedSearch_SetCustomBackgroundInfo_Params();
    params_.backgroundUrl = backgroundUrl;
    params_.attributionLine1 = attributionLine1;
    params_.attributionLine2 = attributionLine2;
    params_.actionUrl = actionUrl;
    params_.collectionId = collectionId;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_SetCustomBackgroundInfo_Name,
        codec.align(EmbeddedSearch_SetCustomBackgroundInfo_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_SetCustomBackgroundInfo_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.selectLocalBackgroundImage = function() {
    return EmbeddedSearchProxy.prototype.selectLocalBackgroundImage
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.selectLocalBackgroundImage = function() {
    var params_ = new EmbeddedSearch_SelectLocalBackgroundImage_Params();
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_SelectLocalBackgroundImage_Name,
        codec.align(EmbeddedSearch_SelectLocalBackgroundImage_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_SelectLocalBackgroundImage_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.blocklistSearchSuggestion = function() {
    return EmbeddedSearchProxy.prototype.blocklistSearchSuggestion
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.blocklistSearchSuggestion = function(taskVersion, taskId) {
    var params_ = new EmbeddedSearch_BlocklistSearchSuggestion_Params();
    params_.taskVersion = taskVersion;
    params_.taskId = taskId;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_BlocklistSearchSuggestion_Name,
        codec.align(EmbeddedSearch_BlocklistSearchSuggestion_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_BlocklistSearchSuggestion_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.blocklistSearchSuggestionWithHash = function() {
    return EmbeddedSearchProxy.prototype.blocklistSearchSuggestionWithHash
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.blocklistSearchSuggestionWithHash = function(taskVersion, taskId, hash) {
    var params_ = new EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params();
    params_.taskVersion = taskVersion;
    params_.taskId = taskId;
    params_.hash = hash;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_BlocklistSearchSuggestionWithHash_Name,
        codec.align(EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.searchSuggestionSelected = function() {
    return EmbeddedSearchProxy.prototype.searchSuggestionSelected
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.searchSuggestionSelected = function(taskVersion, taskId, hash) {
    var params_ = new EmbeddedSearch_SearchSuggestionSelected_Params();
    params_.taskVersion = taskVersion;
    params_.taskId = taskId;
    params_.hash = hash;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_SearchSuggestionSelected_Name,
        codec.align(EmbeddedSearch_SearchSuggestionSelected_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_SearchSuggestionSelected_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.optOutOfSearchSuggestions = function() {
    return EmbeddedSearchProxy.prototype.optOutOfSearchSuggestions
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.optOutOfSearchSuggestions = function() {
    var params_ = new EmbeddedSearch_OptOutOfSearchSuggestions_Params();
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_OptOutOfSearchSuggestions_Name,
        codec.align(EmbeddedSearch_OptOutOfSearchSuggestions_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_OptOutOfSearchSuggestions_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.applyDefaultTheme = function() {
    return EmbeddedSearchProxy.prototype.applyDefaultTheme
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.applyDefaultTheme = function() {
    var params_ = new EmbeddedSearch_ApplyDefaultTheme_Params();
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_ApplyDefaultTheme_Name,
        codec.align(EmbeddedSearch_ApplyDefaultTheme_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_ApplyDefaultTheme_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.applyAutogeneratedTheme = function() {
    return EmbeddedSearchProxy.prototype.applyAutogeneratedTheme
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.applyAutogeneratedTheme = function(color) {
    var params_ = new EmbeddedSearch_ApplyAutogeneratedTheme_Params();
    params_.color = color;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_ApplyAutogeneratedTheme_Name,
        codec.align(EmbeddedSearch_ApplyAutogeneratedTheme_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_ApplyAutogeneratedTheme_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.revertThemeChanges = function() {
    return EmbeddedSearchProxy.prototype.revertThemeChanges
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.revertThemeChanges = function() {
    var params_ = new EmbeddedSearch_RevertThemeChanges_Params();
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_RevertThemeChanges_Name,
        codec.align(EmbeddedSearch_RevertThemeChanges_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_RevertThemeChanges_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.confirmThemeChanges = function() {
    return EmbeddedSearchProxy.prototype.confirmThemeChanges
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.confirmThemeChanges = function() {
    var params_ = new EmbeddedSearch_ConfirmThemeChanges_Params();
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_ConfirmThemeChanges_Name,
        codec.align(EmbeddedSearch_ConfirmThemeChanges_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_ConfirmThemeChanges_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.queryAutocomplete = function() {
    return EmbeddedSearchProxy.prototype.queryAutocomplete
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.queryAutocomplete = function(input, preventInlineAutocomplete) {
    var params_ = new EmbeddedSearch_QueryAutocomplete_Params();
    params_.input = input;
    params_.preventInlineAutocomplete = preventInlineAutocomplete;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_QueryAutocomplete_Name,
        codec.align(EmbeddedSearch_QueryAutocomplete_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_QueryAutocomplete_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.deleteAutocompleteMatch = function() {
    return EmbeddedSearchProxy.prototype.deleteAutocompleteMatch
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.deleteAutocompleteMatch = function(line) {
    var params_ = new EmbeddedSearch_DeleteAutocompleteMatch_Params();
    params_.line = line;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_DeleteAutocompleteMatch_Name,
        codec.align(EmbeddedSearch_DeleteAutocompleteMatch_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_DeleteAutocompleteMatch_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.stopAutocomplete = function() {
    return EmbeddedSearchProxy.prototype.stopAutocomplete
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.stopAutocomplete = function(clearResult) {
    var params_ = new EmbeddedSearch_StopAutocomplete_Params();
    params_.clearResult = clearResult;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_StopAutocomplete_Name,
        codec.align(EmbeddedSearch_StopAutocomplete_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_StopAutocomplete_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.logCharTypedToRepaintLatency = function() {
    return EmbeddedSearchProxy.prototype.logCharTypedToRepaintLatency
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.logCharTypedToRepaintLatency = function(latencyMs) {
    var params_ = new EmbeddedSearch_LogCharTypedToRepaintLatency_Params();
    params_.latencyMs = latencyMs;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_LogCharTypedToRepaintLatency_Name,
        codec.align(EmbeddedSearch_LogCharTypedToRepaintLatency_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_LogCharTypedToRepaintLatency_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.blocklistPromo = function() {
    return EmbeddedSearchProxy.prototype.blocklistPromo
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.blocklistPromo = function(promoId) {
    var params_ = new EmbeddedSearch_BlocklistPromo_Params();
    params_.promoId = promoId;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_BlocklistPromo_Name,
        codec.align(EmbeddedSearch_BlocklistPromo_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_BlocklistPromo_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.openExtensionsPage = function() {
    return EmbeddedSearchProxy.prototype.openExtensionsPage
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.openExtensionsPage = function(button, altKey, ctrlKey, metaKey, shiftKey) {
    var params_ = new EmbeddedSearch_OpenExtensionsPage_Params();
    params_.button = button;
    params_.altKey = altKey;
    params_.ctrlKey = ctrlKey;
    params_.metaKey = metaKey;
    params_.shiftKey = shiftKey;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_OpenExtensionsPage_Name,
        codec.align(EmbeddedSearch_OpenExtensionsPage_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_OpenExtensionsPage_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.openAutocompleteMatch = function() {
    return EmbeddedSearchProxy.prototype.openAutocompleteMatch
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.openAutocompleteMatch = function(line, url, areMatchesShowing, timeElapsedSinceLastFocus, button, altKey, ctrlKey, metaKey, shiftKey) {
    var params_ = new EmbeddedSearch_OpenAutocompleteMatch_Params();
    params_.line = line;
    params_.url = url;
    params_.areMatchesShowing = areMatchesShowing;
    params_.timeElapsedSinceLastFocus = timeElapsedSinceLastFocus;
    params_.button = button;
    params_.altKey = altKey;
    params_.ctrlKey = ctrlKey;
    params_.metaKey = metaKey;
    params_.shiftKey = shiftKey;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_OpenAutocompleteMatch_Name,
        codec.align(EmbeddedSearch_OpenAutocompleteMatch_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_OpenAutocompleteMatch_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchPtr.prototype.toggleSuggestionGroupIdVisibility = function() {
    return EmbeddedSearchProxy.prototype.toggleSuggestionGroupIdVisibility
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchProxy.prototype.toggleSuggestionGroupIdVisibility = function(suggestionGroupId) {
    var params_ = new EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params();
    params_.suggestionGroupId = suggestionGroupId;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearch_ToggleSuggestionGroupIdVisibility_Name,
        codec.align(EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function EmbeddedSearchStub(delegate) {
    this.delegate_ = delegate;
  }
  EmbeddedSearchStub.prototype.focusOmnibox = function(pageSeqNo, focus) {
    return this.delegate_ && this.delegate_.focusOmnibox && this.delegate_.focusOmnibox(pageSeqNo, focus);
  }
  EmbeddedSearchStub.prototype.deleteMostVisitedItem = function(pageSeqNo, url) {
    return this.delegate_ && this.delegate_.deleteMostVisitedItem && this.delegate_.deleteMostVisitedItem(pageSeqNo, url);
  }
  EmbeddedSearchStub.prototype.undoAllMostVisitedDeletions = function(pageSeqNo) {
    return this.delegate_ && this.delegate_.undoAllMostVisitedDeletions && this.delegate_.undoAllMostVisitedDeletions(pageSeqNo);
  }
  EmbeddedSearchStub.prototype.undoMostVisitedDeletion = function(pageSeqNo, url) {
    return this.delegate_ && this.delegate_.undoMostVisitedDeletion && this.delegate_.undoMostVisitedDeletion(pageSeqNo, url);
  }
  EmbeddedSearchStub.prototype.addCustomLink = function(pageSeqNo, url, title) {
    return this.delegate_ && this.delegate_.addCustomLink && this.delegate_.addCustomLink(pageSeqNo, url, title);
  }
  EmbeddedSearchStub.prototype.updateCustomLink = function(pageSeqNo, url, newUrl, newTitle) {
    return this.delegate_ && this.delegate_.updateCustomLink && this.delegate_.updateCustomLink(pageSeqNo, url, newUrl, newTitle);
  }
  EmbeddedSearchStub.prototype.reorderCustomLink = function(pageSeqNo, url, newPos) {
    return this.delegate_ && this.delegate_.reorderCustomLink && this.delegate_.reorderCustomLink(pageSeqNo, url, newPos);
  }
  EmbeddedSearchStub.prototype.deleteCustomLink = function(pageSeqNo, url) {
    return this.delegate_ && this.delegate_.deleteCustomLink && this.delegate_.deleteCustomLink(pageSeqNo, url);
  }
  EmbeddedSearchStub.prototype.undoCustomLinkAction = function(pageSeqNo) {
    return this.delegate_ && this.delegate_.undoCustomLinkAction && this.delegate_.undoCustomLinkAction(pageSeqNo);
  }
  EmbeddedSearchStub.prototype.resetCustomLinks = function(pageSeqNo) {
    return this.delegate_ && this.delegate_.resetCustomLinks && this.delegate_.resetCustomLinks(pageSeqNo);
  }
  EmbeddedSearchStub.prototype.toggleMostVisitedOrCustomLinks = function(pageSeqNo) {
    return this.delegate_ && this.delegate_.toggleMostVisitedOrCustomLinks && this.delegate_.toggleMostVisitedOrCustomLinks(pageSeqNo);
  }
  EmbeddedSearchStub.prototype.toggleShortcutsVisibility = function(pageSeqNo, doNotify) {
    return this.delegate_ && this.delegate_.toggleShortcutsVisibility && this.delegate_.toggleShortcutsVisibility(pageSeqNo, doNotify);
  }
  EmbeddedSearchStub.prototype.logEvent = function(pageSeqNo, event, time) {
    return this.delegate_ && this.delegate_.logEvent && this.delegate_.logEvent(pageSeqNo, event, time);
  }
  EmbeddedSearchStub.prototype.logSuggestionEventWithValue = function(pageSeqNo, event, data, time) {
    return this.delegate_ && this.delegate_.logSuggestionEventWithValue && this.delegate_.logSuggestionEventWithValue(pageSeqNo, event, data, time);
  }
  EmbeddedSearchStub.prototype.logMostVisitedImpression = function(pageSeqNo, impression) {
    return this.delegate_ && this.delegate_.logMostVisitedImpression && this.delegate_.logMostVisitedImpression(pageSeqNo, impression);
  }
  EmbeddedSearchStub.prototype.logMostVisitedNavigation = function(pageSeqNo, impression) {
    return this.delegate_ && this.delegate_.logMostVisitedNavigation && this.delegate_.logMostVisitedNavigation(pageSeqNo, impression);
  }
  EmbeddedSearchStub.prototype.pasteAndOpenDropdown = function(pageSeqNo, textToBePasted) {
    return this.delegate_ && this.delegate_.pasteAndOpenDropdown && this.delegate_.pasteAndOpenDropdown(pageSeqNo, textToBePasted);
  }
  EmbeddedSearchStub.prototype.setCustomBackgroundInfo = function(backgroundUrl, attributionLine1, attributionLine2, actionUrl, collectionId) {
    return this.delegate_ && this.delegate_.setCustomBackgroundInfo && this.delegate_.setCustomBackgroundInfo(backgroundUrl, attributionLine1, attributionLine2, actionUrl, collectionId);
  }
  EmbeddedSearchStub.prototype.selectLocalBackgroundImage = function() {
    return this.delegate_ && this.delegate_.selectLocalBackgroundImage && this.delegate_.selectLocalBackgroundImage();
  }
  EmbeddedSearchStub.prototype.blocklistSearchSuggestion = function(taskVersion, taskId) {
    return this.delegate_ && this.delegate_.blocklistSearchSuggestion && this.delegate_.blocklistSearchSuggestion(taskVersion, taskId);
  }
  EmbeddedSearchStub.prototype.blocklistSearchSuggestionWithHash = function(taskVersion, taskId, hash) {
    return this.delegate_ && this.delegate_.blocklistSearchSuggestionWithHash && this.delegate_.blocklistSearchSuggestionWithHash(taskVersion, taskId, hash);
  }
  EmbeddedSearchStub.prototype.searchSuggestionSelected = function(taskVersion, taskId, hash) {
    return this.delegate_ && this.delegate_.searchSuggestionSelected && this.delegate_.searchSuggestionSelected(taskVersion, taskId, hash);
  }
  EmbeddedSearchStub.prototype.optOutOfSearchSuggestions = function() {
    return this.delegate_ && this.delegate_.optOutOfSearchSuggestions && this.delegate_.optOutOfSearchSuggestions();
  }
  EmbeddedSearchStub.prototype.applyDefaultTheme = function() {
    return this.delegate_ && this.delegate_.applyDefaultTheme && this.delegate_.applyDefaultTheme();
  }
  EmbeddedSearchStub.prototype.applyAutogeneratedTheme = function(color) {
    return this.delegate_ && this.delegate_.applyAutogeneratedTheme && this.delegate_.applyAutogeneratedTheme(color);
  }
  EmbeddedSearchStub.prototype.revertThemeChanges = function() {
    return this.delegate_ && this.delegate_.revertThemeChanges && this.delegate_.revertThemeChanges();
  }
  EmbeddedSearchStub.prototype.confirmThemeChanges = function() {
    return this.delegate_ && this.delegate_.confirmThemeChanges && this.delegate_.confirmThemeChanges();
  }
  EmbeddedSearchStub.prototype.queryAutocomplete = function(input, preventInlineAutocomplete) {
    return this.delegate_ && this.delegate_.queryAutocomplete && this.delegate_.queryAutocomplete(input, preventInlineAutocomplete);
  }
  EmbeddedSearchStub.prototype.deleteAutocompleteMatch = function(line) {
    return this.delegate_ && this.delegate_.deleteAutocompleteMatch && this.delegate_.deleteAutocompleteMatch(line);
  }
  EmbeddedSearchStub.prototype.stopAutocomplete = function(clearResult) {
    return this.delegate_ && this.delegate_.stopAutocomplete && this.delegate_.stopAutocomplete(clearResult);
  }
  EmbeddedSearchStub.prototype.logCharTypedToRepaintLatency = function(latencyMs) {
    return this.delegate_ && this.delegate_.logCharTypedToRepaintLatency && this.delegate_.logCharTypedToRepaintLatency(latencyMs);
  }
  EmbeddedSearchStub.prototype.blocklistPromo = function(promoId) {
    return this.delegate_ && this.delegate_.blocklistPromo && this.delegate_.blocklistPromo(promoId);
  }
  EmbeddedSearchStub.prototype.openExtensionsPage = function(button, altKey, ctrlKey, metaKey, shiftKey) {
    return this.delegate_ && this.delegate_.openExtensionsPage && this.delegate_.openExtensionsPage(button, altKey, ctrlKey, metaKey, shiftKey);
  }
  EmbeddedSearchStub.prototype.openAutocompleteMatch = function(line, url, areMatchesShowing, timeElapsedSinceLastFocus, button, altKey, ctrlKey, metaKey, shiftKey) {
    return this.delegate_ && this.delegate_.openAutocompleteMatch && this.delegate_.openAutocompleteMatch(line, url, areMatchesShowing, timeElapsedSinceLastFocus, button, altKey, ctrlKey, metaKey, shiftKey);
  }
  EmbeddedSearchStub.prototype.toggleSuggestionGroupIdVisibility = function(suggestionGroupId) {
    return this.delegate_ && this.delegate_.toggleSuggestionGroupIdVisibility && this.delegate_.toggleSuggestionGroupIdVisibility(suggestionGroupId);
  }

  EmbeddedSearchStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kEmbeddedSearch_FocusOmnibox_Name:
      var params = reader.decodeStruct(EmbeddedSearch_FocusOmnibox_Params);
      this.focusOmnibox(params.pageSeqNo, params.focus);
      return true;
    case kEmbeddedSearch_DeleteMostVisitedItem_Name:
      var params = reader.decodeStruct(EmbeddedSearch_DeleteMostVisitedItem_Params);
      this.deleteMostVisitedItem(params.pageSeqNo, params.url);
      return true;
    case kEmbeddedSearch_UndoAllMostVisitedDeletions_Name:
      var params = reader.decodeStruct(EmbeddedSearch_UndoAllMostVisitedDeletions_Params);
      this.undoAllMostVisitedDeletions(params.pageSeqNo);
      return true;
    case kEmbeddedSearch_UndoMostVisitedDeletion_Name:
      var params = reader.decodeStruct(EmbeddedSearch_UndoMostVisitedDeletion_Params);
      this.undoMostVisitedDeletion(params.pageSeqNo, params.url);
      return true;
    case kEmbeddedSearch_ReorderCustomLink_Name:
      var params = reader.decodeStruct(EmbeddedSearch_ReorderCustomLink_Params);
      this.reorderCustomLink(params.pageSeqNo, params.url, params.newPos);
      return true;
    case kEmbeddedSearch_UndoCustomLinkAction_Name:
      var params = reader.decodeStruct(EmbeddedSearch_UndoCustomLinkAction_Params);
      this.undoCustomLinkAction(params.pageSeqNo);
      return true;
    case kEmbeddedSearch_ResetCustomLinks_Name:
      var params = reader.decodeStruct(EmbeddedSearch_ResetCustomLinks_Params);
      this.resetCustomLinks(params.pageSeqNo);
      return true;
    case kEmbeddedSearch_ToggleMostVisitedOrCustomLinks_Name:
      var params = reader.decodeStruct(EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params);
      this.toggleMostVisitedOrCustomLinks(params.pageSeqNo);
      return true;
    case kEmbeddedSearch_ToggleShortcutsVisibility_Name:
      var params = reader.decodeStruct(EmbeddedSearch_ToggleShortcutsVisibility_Params);
      this.toggleShortcutsVisibility(params.pageSeqNo, params.doNotify);
      return true;
    case kEmbeddedSearch_LogEvent_Name:
      var params = reader.decodeStruct(EmbeddedSearch_LogEvent_Params);
      this.logEvent(params.pageSeqNo, params.event, params.time);
      return true;
    case kEmbeddedSearch_LogSuggestionEventWithValue_Name:
      var params = reader.decodeStruct(EmbeddedSearch_LogSuggestionEventWithValue_Params);
      this.logSuggestionEventWithValue(params.pageSeqNo, params.event, params.data, params.time);
      return true;
    case kEmbeddedSearch_LogMostVisitedImpression_Name:
      var params = reader.decodeStruct(EmbeddedSearch_LogMostVisitedImpression_Params);
      this.logMostVisitedImpression(params.pageSeqNo, params.impression);
      return true;
    case kEmbeddedSearch_LogMostVisitedNavigation_Name:
      var params = reader.decodeStruct(EmbeddedSearch_LogMostVisitedNavigation_Params);
      this.logMostVisitedNavigation(params.pageSeqNo, params.impression);
      return true;
    case kEmbeddedSearch_PasteAndOpenDropdown_Name:
      var params = reader.decodeStruct(EmbeddedSearch_PasteAndOpenDropdown_Params);
      this.pasteAndOpenDropdown(params.pageSeqNo, params.textToBePasted);
      return true;
    case kEmbeddedSearch_SetCustomBackgroundInfo_Name:
      var params = reader.decodeStruct(EmbeddedSearch_SetCustomBackgroundInfo_Params);
      this.setCustomBackgroundInfo(params.backgroundUrl, params.attributionLine1, params.attributionLine2, params.actionUrl, params.collectionId);
      return true;
    case kEmbeddedSearch_SelectLocalBackgroundImage_Name:
      var params = reader.decodeStruct(EmbeddedSearch_SelectLocalBackgroundImage_Params);
      this.selectLocalBackgroundImage();
      return true;
    case kEmbeddedSearch_BlocklistSearchSuggestion_Name:
      var params = reader.decodeStruct(EmbeddedSearch_BlocklistSearchSuggestion_Params);
      this.blocklistSearchSuggestion(params.taskVersion, params.taskId);
      return true;
    case kEmbeddedSearch_BlocklistSearchSuggestionWithHash_Name:
      var params = reader.decodeStruct(EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params);
      this.blocklistSearchSuggestionWithHash(params.taskVersion, params.taskId, params.hash);
      return true;
    case kEmbeddedSearch_SearchSuggestionSelected_Name:
      var params = reader.decodeStruct(EmbeddedSearch_SearchSuggestionSelected_Params);
      this.searchSuggestionSelected(params.taskVersion, params.taskId, params.hash);
      return true;
    case kEmbeddedSearch_OptOutOfSearchSuggestions_Name:
      var params = reader.decodeStruct(EmbeddedSearch_OptOutOfSearchSuggestions_Params);
      this.optOutOfSearchSuggestions();
      return true;
    case kEmbeddedSearch_ApplyDefaultTheme_Name:
      var params = reader.decodeStruct(EmbeddedSearch_ApplyDefaultTheme_Params);
      this.applyDefaultTheme();
      return true;
    case kEmbeddedSearch_ApplyAutogeneratedTheme_Name:
      var params = reader.decodeStruct(EmbeddedSearch_ApplyAutogeneratedTheme_Params);
      this.applyAutogeneratedTheme(params.color);
      return true;
    case kEmbeddedSearch_RevertThemeChanges_Name:
      var params = reader.decodeStruct(EmbeddedSearch_RevertThemeChanges_Params);
      this.revertThemeChanges();
      return true;
    case kEmbeddedSearch_ConfirmThemeChanges_Name:
      var params = reader.decodeStruct(EmbeddedSearch_ConfirmThemeChanges_Params);
      this.confirmThemeChanges();
      return true;
    case kEmbeddedSearch_QueryAutocomplete_Name:
      var params = reader.decodeStruct(EmbeddedSearch_QueryAutocomplete_Params);
      this.queryAutocomplete(params.input, params.preventInlineAutocomplete);
      return true;
    case kEmbeddedSearch_DeleteAutocompleteMatch_Name:
      var params = reader.decodeStruct(EmbeddedSearch_DeleteAutocompleteMatch_Params);
      this.deleteAutocompleteMatch(params.line);
      return true;
    case kEmbeddedSearch_StopAutocomplete_Name:
      var params = reader.decodeStruct(EmbeddedSearch_StopAutocomplete_Params);
      this.stopAutocomplete(params.clearResult);
      return true;
    case kEmbeddedSearch_LogCharTypedToRepaintLatency_Name:
      var params = reader.decodeStruct(EmbeddedSearch_LogCharTypedToRepaintLatency_Params);
      this.logCharTypedToRepaintLatency(params.latencyMs);
      return true;
    case kEmbeddedSearch_BlocklistPromo_Name:
      var params = reader.decodeStruct(EmbeddedSearch_BlocklistPromo_Params);
      this.blocklistPromo(params.promoId);
      return true;
    case kEmbeddedSearch_OpenExtensionsPage_Name:
      var params = reader.decodeStruct(EmbeddedSearch_OpenExtensionsPage_Params);
      this.openExtensionsPage(params.button, params.altKey, params.ctrlKey, params.metaKey, params.shiftKey);
      return true;
    case kEmbeddedSearch_OpenAutocompleteMatch_Name:
      var params = reader.decodeStruct(EmbeddedSearch_OpenAutocompleteMatch_Params);
      this.openAutocompleteMatch(params.line, params.url, params.areMatchesShowing, params.timeElapsedSinceLastFocus, params.button, params.altKey, params.ctrlKey, params.metaKey, params.shiftKey);
      return true;
    case kEmbeddedSearch_ToggleSuggestionGroupIdVisibility_Name:
      var params = reader.decodeStruct(EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params);
      this.toggleSuggestionGroupIdVisibility(params.suggestionGroupId);
      return true;
    default:
      return false;
    }
  };

  EmbeddedSearchStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kEmbeddedSearch_AddCustomLink_Name:
      var params = reader.decodeStruct(EmbeddedSearch_AddCustomLink_Params);
      this.addCustomLink(params.pageSeqNo, params.url, params.title).then(function(response) {
        var responseParams =
            new EmbeddedSearch_AddCustomLink_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kEmbeddedSearch_AddCustomLink_Name,
            codec.align(EmbeddedSearch_AddCustomLink_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(EmbeddedSearch_AddCustomLink_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kEmbeddedSearch_UpdateCustomLink_Name:
      var params = reader.decodeStruct(EmbeddedSearch_UpdateCustomLink_Params);
      this.updateCustomLink(params.pageSeqNo, params.url, params.newUrl, params.newTitle).then(function(response) {
        var responseParams =
            new EmbeddedSearch_UpdateCustomLink_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kEmbeddedSearch_UpdateCustomLink_Name,
            codec.align(EmbeddedSearch_UpdateCustomLink_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(EmbeddedSearch_UpdateCustomLink_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    case kEmbeddedSearch_DeleteCustomLink_Name:
      var params = reader.decodeStruct(EmbeddedSearch_DeleteCustomLink_Params);
      this.deleteCustomLink(params.pageSeqNo, params.url).then(function(response) {
        var responseParams =
            new EmbeddedSearch_DeleteCustomLink_ResponseParams();
        responseParams.success = response.success;
        var builder = new codec.MessageV1Builder(
            kEmbeddedSearch_DeleteCustomLink_Name,
            codec.align(EmbeddedSearch_DeleteCustomLink_ResponseParams.encodedSize),
            codec.kMessageIsResponse, reader.requestID);
        builder.encodeStruct(EmbeddedSearch_DeleteCustomLink_ResponseParams,
                             responseParams);
        var message = builder.finish();
        responder.accept(message);
      });
      return true;
    default:
      return false;
    }
  };

  function validateEmbeddedSearchRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kEmbeddedSearch_FocusOmnibox_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_FocusOmnibox_Params;
      break;
      case kEmbeddedSearch_DeleteMostVisitedItem_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_DeleteMostVisitedItem_Params;
      break;
      case kEmbeddedSearch_UndoAllMostVisitedDeletions_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_UndoAllMostVisitedDeletions_Params;
      break;
      case kEmbeddedSearch_UndoMostVisitedDeletion_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_UndoMostVisitedDeletion_Params;
      break;
      case kEmbeddedSearch_AddCustomLink_Name:
        if (message.expectsResponse())
          paramsClass = EmbeddedSearch_AddCustomLink_Params;
      break;
      case kEmbeddedSearch_UpdateCustomLink_Name:
        if (message.expectsResponse())
          paramsClass = EmbeddedSearch_UpdateCustomLink_Params;
      break;
      case kEmbeddedSearch_ReorderCustomLink_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_ReorderCustomLink_Params;
      break;
      case kEmbeddedSearch_DeleteCustomLink_Name:
        if (message.expectsResponse())
          paramsClass = EmbeddedSearch_DeleteCustomLink_Params;
      break;
      case kEmbeddedSearch_UndoCustomLinkAction_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_UndoCustomLinkAction_Params;
      break;
      case kEmbeddedSearch_ResetCustomLinks_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_ResetCustomLinks_Params;
      break;
      case kEmbeddedSearch_ToggleMostVisitedOrCustomLinks_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_ToggleMostVisitedOrCustomLinks_Params;
      break;
      case kEmbeddedSearch_ToggleShortcutsVisibility_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_ToggleShortcutsVisibility_Params;
      break;
      case kEmbeddedSearch_LogEvent_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_LogEvent_Params;
      break;
      case kEmbeddedSearch_LogSuggestionEventWithValue_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_LogSuggestionEventWithValue_Params;
      break;
      case kEmbeddedSearch_LogMostVisitedImpression_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_LogMostVisitedImpression_Params;
      break;
      case kEmbeddedSearch_LogMostVisitedNavigation_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_LogMostVisitedNavigation_Params;
      break;
      case kEmbeddedSearch_PasteAndOpenDropdown_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_PasteAndOpenDropdown_Params;
      break;
      case kEmbeddedSearch_SetCustomBackgroundInfo_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_SetCustomBackgroundInfo_Params;
      break;
      case kEmbeddedSearch_SelectLocalBackgroundImage_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_SelectLocalBackgroundImage_Params;
      break;
      case kEmbeddedSearch_BlocklistSearchSuggestion_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_BlocklistSearchSuggestion_Params;
      break;
      case kEmbeddedSearch_BlocklistSearchSuggestionWithHash_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_BlocklistSearchSuggestionWithHash_Params;
      break;
      case kEmbeddedSearch_SearchSuggestionSelected_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_SearchSuggestionSelected_Params;
      break;
      case kEmbeddedSearch_OptOutOfSearchSuggestions_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_OptOutOfSearchSuggestions_Params;
      break;
      case kEmbeddedSearch_ApplyDefaultTheme_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_ApplyDefaultTheme_Params;
      break;
      case kEmbeddedSearch_ApplyAutogeneratedTheme_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_ApplyAutogeneratedTheme_Params;
      break;
      case kEmbeddedSearch_RevertThemeChanges_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_RevertThemeChanges_Params;
      break;
      case kEmbeddedSearch_ConfirmThemeChanges_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_ConfirmThemeChanges_Params;
      break;
      case kEmbeddedSearch_QueryAutocomplete_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_QueryAutocomplete_Params;
      break;
      case kEmbeddedSearch_DeleteAutocompleteMatch_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_DeleteAutocompleteMatch_Params;
      break;
      case kEmbeddedSearch_StopAutocomplete_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_StopAutocomplete_Params;
      break;
      case kEmbeddedSearch_LogCharTypedToRepaintLatency_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_LogCharTypedToRepaintLatency_Params;
      break;
      case kEmbeddedSearch_BlocklistPromo_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_BlocklistPromo_Params;
      break;
      case kEmbeddedSearch_OpenExtensionsPage_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_OpenExtensionsPage_Params;
      break;
      case kEmbeddedSearch_OpenAutocompleteMatch_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_OpenAutocompleteMatch_Params;
      break;
      case kEmbeddedSearch_ToggleSuggestionGroupIdVisibility_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearch_ToggleSuggestionGroupIdVisibility_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateEmbeddedSearchResponse(messageValidator) {
   var message = messageValidator.message;
   var paramsClass = null;
   switch (message.getName()) {
      case kEmbeddedSearch_AddCustomLink_Name:
        if (message.isResponse())
          paramsClass = EmbeddedSearch_AddCustomLink_ResponseParams;
        break;
      case kEmbeddedSearch_UpdateCustomLink_Name:
        if (message.isResponse())
          paramsClass = EmbeddedSearch_UpdateCustomLink_ResponseParams;
        break;
      case kEmbeddedSearch_DeleteCustomLink_Name:
        if (message.isResponse())
          paramsClass = EmbeddedSearch_DeleteCustomLink_ResponseParams;
        break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  var EmbeddedSearch = {
    name: 'search.mojom.EmbeddedSearch',
    kVersion: 0,
    ptrClass: EmbeddedSearchPtr,
    proxyClass: EmbeddedSearchProxy,
    stubClass: EmbeddedSearchStub,
    validateRequest: validateEmbeddedSearchRequest,
    validateResponse: validateEmbeddedSearchResponse,
  };
  EmbeddedSearchStub.prototype.validator = validateEmbeddedSearchRequest;
  EmbeddedSearchProxy.prototype.validator = validateEmbeddedSearchResponse;
  var kEmbeddedSearchClient_AutocompleteResultChanged_Name = 1579561584;
  var kEmbeddedSearchClient_AutocompleteMatchImageAvailable_Name = 1423637218;
  var kEmbeddedSearchClient_SetPageSequenceNumber_Name = 127101429;
  var kEmbeddedSearchClient_FocusChanged_Name = 1369046926;
  var kEmbeddedSearchClient_MostVisitedInfoChanged_Name = 905259609;
  var kEmbeddedSearchClient_SetInputInProgress_Name = 1944838195;
  var kEmbeddedSearchClient_ThemeChanged_Name = 802046175;
  var kEmbeddedSearchClient_LocalBackgroundSelected_Name = 1499833720;

  function EmbeddedSearchClientPtr(handleOrPtrInfo) {
    this.ptr = new bindings.InterfacePtrController(EmbeddedSearchClient,
                                                   handleOrPtrInfo);
  }

  function EmbeddedSearchClientAssociatedPtr(associatedInterfacePtrInfo) {
    this.ptr = new associatedBindings.AssociatedInterfacePtrController(
        EmbeddedSearchClient, associatedInterfacePtrInfo);
  }

  EmbeddedSearchClientAssociatedPtr.prototype =
      Object.create(EmbeddedSearchClientPtr.prototype);
  EmbeddedSearchClientAssociatedPtr.prototype.constructor =
      EmbeddedSearchClientAssociatedPtr;

  function EmbeddedSearchClientProxy(receiver) {
    this.receiver_ = receiver;
  }
  EmbeddedSearchClientPtr.prototype.autocompleteResultChanged = function() {
    return EmbeddedSearchClientProxy.prototype.autocompleteResultChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.autocompleteResultChanged = function(result) {
    var params_ = new EmbeddedSearchClient_AutocompleteResultChanged_Params();
    params_.result = result;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_AutocompleteResultChanged_Name,
        codec.align(EmbeddedSearchClient_AutocompleteResultChanged_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_AutocompleteResultChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.autocompleteMatchImageAvailable = function() {
    return EmbeddedSearchClientProxy.prototype.autocompleteMatchImageAvailable
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.autocompleteMatchImageAvailable = function(matchIndex, url, dataUrl) {
    var params_ = new EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params();
    params_.matchIndex = matchIndex;
    params_.url = url;
    params_.dataUrl = dataUrl;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_AutocompleteMatchImageAvailable_Name,
        codec.align(EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.setPageSequenceNumber = function() {
    return EmbeddedSearchClientProxy.prototype.setPageSequenceNumber
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.setPageSequenceNumber = function(pageSeqNo) {
    var params_ = new EmbeddedSearchClient_SetPageSequenceNumber_Params();
    params_.pageSeqNo = pageSeqNo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_SetPageSequenceNumber_Name,
        codec.align(EmbeddedSearchClient_SetPageSequenceNumber_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_SetPageSequenceNumber_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.focusChanged = function() {
    return EmbeddedSearchClientProxy.prototype.focusChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.focusChanged = function(newFocusState, reason) {
    var params_ = new EmbeddedSearchClient_FocusChanged_Params();
    params_.newFocusState = newFocusState;
    params_.reason = reason;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_FocusChanged_Name,
        codec.align(EmbeddedSearchClient_FocusChanged_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_FocusChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.mostVisitedInfoChanged = function() {
    return EmbeddedSearchClientProxy.prototype.mostVisitedInfoChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.mostVisitedInfoChanged = function(mostVisitedInfo) {
    var params_ = new EmbeddedSearchClient_MostVisitedInfoChanged_Params();
    params_.mostVisitedInfo = mostVisitedInfo;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_MostVisitedInfoChanged_Name,
        codec.align(EmbeddedSearchClient_MostVisitedInfoChanged_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_MostVisitedInfoChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.setInputInProgress = function() {
    return EmbeddedSearchClientProxy.prototype.setInputInProgress
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.setInputInProgress = function(inputInProgress) {
    var params_ = new EmbeddedSearchClient_SetInputInProgress_Params();
    params_.inputInProgress = inputInProgress;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_SetInputInProgress_Name,
        codec.align(EmbeddedSearchClient_SetInputInProgress_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_SetInputInProgress_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.themeChanged = function() {
    return EmbeddedSearchClientProxy.prototype.themeChanged
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.themeChanged = function(theme) {
    var params_ = new EmbeddedSearchClient_ThemeChanged_Params();
    params_.theme = theme;
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_ThemeChanged_Name,
        codec.align(EmbeddedSearchClient_ThemeChanged_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_ThemeChanged_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };
  EmbeddedSearchClientPtr.prototype.localBackgroundSelected = function() {
    return EmbeddedSearchClientProxy.prototype.localBackgroundSelected
        .apply(this.ptr.getProxy(), arguments);
  };

  EmbeddedSearchClientProxy.prototype.localBackgroundSelected = function() {
    var params_ = new EmbeddedSearchClient_LocalBackgroundSelected_Params();
    var builder = new codec.MessageV0Builder(
        kEmbeddedSearchClient_LocalBackgroundSelected_Name,
        codec.align(EmbeddedSearchClient_LocalBackgroundSelected_Params.encodedSize));
    builder.encodeStruct(EmbeddedSearchClient_LocalBackgroundSelected_Params, params_);
    var message = builder.finish();
    this.receiver_.accept(message);
  };

  function EmbeddedSearchClientStub(delegate) {
    this.delegate_ = delegate;
  }
  EmbeddedSearchClientStub.prototype.autocompleteResultChanged = function(result) {
    return this.delegate_ && this.delegate_.autocompleteResultChanged && this.delegate_.autocompleteResultChanged(result);
  }
  EmbeddedSearchClientStub.prototype.autocompleteMatchImageAvailable = function(matchIndex, url, dataUrl) {
    return this.delegate_ && this.delegate_.autocompleteMatchImageAvailable && this.delegate_.autocompleteMatchImageAvailable(matchIndex, url, dataUrl);
  }
  EmbeddedSearchClientStub.prototype.setPageSequenceNumber = function(pageSeqNo) {
    return this.delegate_ && this.delegate_.setPageSequenceNumber && this.delegate_.setPageSequenceNumber(pageSeqNo);
  }
  EmbeddedSearchClientStub.prototype.focusChanged = function(newFocusState, reason) {
    return this.delegate_ && this.delegate_.focusChanged && this.delegate_.focusChanged(newFocusState, reason);
  }
  EmbeddedSearchClientStub.prototype.mostVisitedInfoChanged = function(mostVisitedInfo) {
    return this.delegate_ && this.delegate_.mostVisitedInfoChanged && this.delegate_.mostVisitedInfoChanged(mostVisitedInfo);
  }
  EmbeddedSearchClientStub.prototype.setInputInProgress = function(inputInProgress) {
    return this.delegate_ && this.delegate_.setInputInProgress && this.delegate_.setInputInProgress(inputInProgress);
  }
  EmbeddedSearchClientStub.prototype.themeChanged = function(theme) {
    return this.delegate_ && this.delegate_.themeChanged && this.delegate_.themeChanged(theme);
  }
  EmbeddedSearchClientStub.prototype.localBackgroundSelected = function() {
    return this.delegate_ && this.delegate_.localBackgroundSelected && this.delegate_.localBackgroundSelected();
  }

  EmbeddedSearchClientStub.prototype.accept = function(message) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    case kEmbeddedSearchClient_AutocompleteResultChanged_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_AutocompleteResultChanged_Params);
      this.autocompleteResultChanged(params.result);
      return true;
    case kEmbeddedSearchClient_AutocompleteMatchImageAvailable_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params);
      this.autocompleteMatchImageAvailable(params.matchIndex, params.url, params.dataUrl);
      return true;
    case kEmbeddedSearchClient_SetPageSequenceNumber_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_SetPageSequenceNumber_Params);
      this.setPageSequenceNumber(params.pageSeqNo);
      return true;
    case kEmbeddedSearchClient_FocusChanged_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_FocusChanged_Params);
      this.focusChanged(params.newFocusState, params.reason);
      return true;
    case kEmbeddedSearchClient_MostVisitedInfoChanged_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_MostVisitedInfoChanged_Params);
      this.mostVisitedInfoChanged(params.mostVisitedInfo);
      return true;
    case kEmbeddedSearchClient_SetInputInProgress_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_SetInputInProgress_Params);
      this.setInputInProgress(params.inputInProgress);
      return true;
    case kEmbeddedSearchClient_ThemeChanged_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_ThemeChanged_Params);
      this.themeChanged(params.theme);
      return true;
    case kEmbeddedSearchClient_LocalBackgroundSelected_Name:
      var params = reader.decodeStruct(EmbeddedSearchClient_LocalBackgroundSelected_Params);
      this.localBackgroundSelected();
      return true;
    default:
      return false;
    }
  };

  EmbeddedSearchClientStub.prototype.acceptWithResponder =
      function(message, responder) {
    var reader = new codec.MessageReader(message);
    switch (reader.messageName) {
    default:
      return false;
    }
  };

  function validateEmbeddedSearchClientRequest(messageValidator) {
    var message = messageValidator.message;
    var paramsClass = null;
    switch (message.getName()) {
      case kEmbeddedSearchClient_AutocompleteResultChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_AutocompleteResultChanged_Params;
      break;
      case kEmbeddedSearchClient_AutocompleteMatchImageAvailable_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_AutocompleteMatchImageAvailable_Params;
      break;
      case kEmbeddedSearchClient_SetPageSequenceNumber_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_SetPageSequenceNumber_Params;
      break;
      case kEmbeddedSearchClient_FocusChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_FocusChanged_Params;
      break;
      case kEmbeddedSearchClient_MostVisitedInfoChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_MostVisitedInfoChanged_Params;
      break;
      case kEmbeddedSearchClient_SetInputInProgress_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_SetInputInProgress_Params;
      break;
      case kEmbeddedSearchClient_ThemeChanged_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_ThemeChanged_Params;
      break;
      case kEmbeddedSearchClient_LocalBackgroundSelected_Name:
        if (!message.expectsResponse() && !message.isResponse())
          paramsClass = EmbeddedSearchClient_LocalBackgroundSelected_Params;
      break;
    }
    if (paramsClass === null)
      return validator.validationError.NONE;
    return paramsClass.validate(messageValidator, messageValidator.message.getHeaderNumBytes());
  }

  function validateEmbeddedSearchClientResponse(messageValidator) {
    return validator.validationError.NONE;
  }

  var EmbeddedSearchClient = {
    name: 'search.mojom.EmbeddedSearchClient',
    kVersion: 0,
    ptrClass: EmbeddedSearchClientPtr,
    proxyClass: EmbeddedSearchClientProxy,
    stubClass: EmbeddedSearchClientStub,
    validateRequest: validateEmbeddedSearchClientRequest,
    validateResponse: null,
  };
  EmbeddedSearchClientStub.prototype.validator = validateEmbeddedSearchClientRequest;
  EmbeddedSearchClientProxy.prototype.validator = null;
  exports.NTPLoggingEventType = NTPLoggingEventType;
  exports.NTPSuggestionsLoggingEventType = NTPSuggestionsLoggingEventType;
  exports.OmniboxFocusState = OmniboxFocusState;
  exports.OmniboxFocusChangeReason = OmniboxFocusChangeReason;
  exports.NTPTileImpression = NTPTileImpression;
  exports.InstantMostVisitedInfo = InstantMostVisitedInfo;
  exports.NtpTheme = NtpTheme;
  exports.SearchBoxTheme = SearchBoxTheme;
  exports.EmbeddedSearchConnector = EmbeddedSearchConnector;
  exports.EmbeddedSearchConnectorPtr = EmbeddedSearchConnectorPtr;
  exports.EmbeddedSearchConnectorAssociatedPtr = EmbeddedSearchConnectorAssociatedPtr;
  exports.EmbeddedSearch = EmbeddedSearch;
  exports.EmbeddedSearchPtr = EmbeddedSearchPtr;
  exports.EmbeddedSearchAssociatedPtr = EmbeddedSearchAssociatedPtr;
  exports.EmbeddedSearchClient = EmbeddedSearchClient;
  exports.EmbeddedSearchClientPtr = EmbeddedSearchClientPtr;
  exports.EmbeddedSearchClientAssociatedPtr = EmbeddedSearchClientAssociatedPtr;
})();