// services/network/public/mojom/web_sandbox_flags.mojom.js is auto generated by mojom_bindings_generator.py, do not edit

// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

(function() {
  var mojomId = 'services/network/public/mojom/web_sandbox_flags.mojom';
  if (mojo.internal.isMojomLoaded(mojomId)) {
    console.warn('The following mojom is loaded multiple times: ' + mojomId);
    return;
  }
  mojo.internal.markMojomLoaded(mojomId);
  var bindings = mojo;
  var associatedBindings = mojo;
  var codec = mojo.internal;
  var validator = mojo.internal;

  var exports = mojo.internal.exposeNamespace('network.mojom');


  var WebSandboxFlags = {};
  WebSandboxFlags.kNone = 0;
  WebSandboxFlags.kNavigation = 1;
  WebSandboxFlags.kPlugins = 2;
  WebSandboxFlags.kOrigin = 4;
  WebSandboxFlags.kForms = 8;
  WebSandboxFlags.kScripts = 16;
  WebSandboxFlags.kTopNavigation = 32;
  WebSandboxFlags.kPopups = 64;
  WebSandboxFlags.kAutomaticFeatures = 128;
  WebSandboxFlags.kPointerLock = 256;
  WebSandboxFlags.kDocumentDomain = 512;
  WebSandboxFlags.kOrientationLock = 1024;
  WebSandboxFlags.kPropagatesToAuxiliaryBrowsingContexts = 2048;
  WebSandboxFlags.kModals = 4096;
  WebSandboxFlags.kPresentationController = 8192;
  WebSandboxFlags.kTopNavigationByUserActivation = 16384;
  WebSandboxFlags.kDownloads = 32768;
  WebSandboxFlags.kStorageAccessByUserActivation = 65536;
  WebSandboxFlags.kAll = -1;
  WebSandboxFlags.MIN_VALUE = -1,
  WebSandboxFlags.MAX_VALUE = 65536,

  WebSandboxFlags.isKnownEnumValue = function(value) {
    switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
      return true;
    }
    return false;
  };

  WebSandboxFlags.validate = function(enumValue) {
    var isExtensible = true;
    if (isExtensible || this.isKnownEnumValue(enumValue))
      return validator.validationError.NONE;

    return validator.validationError.UNKNOWN_ENUM_VALUE;
  };

  exports.WebSandboxFlags = WebSandboxFlags;
})();